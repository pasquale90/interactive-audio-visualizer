<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_audio_8h">
<title>src/audio.h File Reference</title>
<indexterm><primary>src/audio.h</primary></indexterm>
<programlisting>#include &lt;jack/jack.h&gt;
#include &lt;jack/types.h&gt;
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;unistd.h&gt;
</programlisting>Include dependency graph for audio.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="audio_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="audio_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classAudioStream">AudioStream</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_audio_8h_1aec492d58c6b0bca2c0accfa47d7d7022">audioBufferCallback</link> (jack_default_audio_sample_t *left, jack_default_audio_sample_t *right)</para>

<para>Callback method - process called when a new audio buffer occurs It forces the Auiolizer and <link linkend="_classVisualizer">Visualizer</link> classes to provide controlling methods for synchronizing audio (streaming) and image (both capturing &amp; visualization). Two pointers are passed to fill a sine signal using the <link linkend="_classAudiolizer">Audiolizer</link>, which is then passed into the <link linkend="_classVisualizer">Visualizer</link> for controling image properties using audio analysis tools. </para>
</listitem>
            <listitem><para>int <link linkend="_audio_8h_1a79c9581f080b5c0d8388f9aa63765543">streamAudio</link> (jack_nframes_t nframes, void *arg)</para>

<para>A non-member fuction used to alias the <link linkend="_classAudioStream_1a94ed22346857a37b90110db868628145">AudioStream::streamBuffer</link> which is used as an argument in the AudioStream::jack_set_process_callback member function. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_audio_8h_1aec492d58c6b0bca2c0accfa47d7d7022"/>    <section>
    <title>audioBufferCallback()</title>
<indexterm><primary>audioBufferCallback</primary><secondary>audio.h</secondary></indexterm>
<indexterm><primary>audio.h</primary><secondary>audioBufferCallback</secondary></indexterm>
<para><computeroutput>void audioBufferCallback (jack_default_audio_sample_t * left, jack_default_audio_sample_t * right)</computeroutput></para><para>

<para>Callback method - process called when a new audio buffer occurs It forces the Auiolizer and <link linkend="_classVisualizer">Visualizer</link> classes to provide controlling methods for synchronizing audio (streaming) and image (both capturing &amp; visualization). Two pointers are passed to fill a sine signal using the <link linkend="_classAudiolizer">Audiolizer</link>, which is then passed into the <link linkend="_classVisualizer">Visualizer</link> for controling image properties using audio analysis tools. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>jack_default_audio_sample_t*</entry>
                                <entry>
<para>left - left sine signal is a pointer to float array for the left channel </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>jack_default_audio_sample_t*</entry>
                                <entry>
<para>right - right sine signal is a pointer to float array for the right channel </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line 34 of file main.cpp.</para>
<programlisting>34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;--&gt;&#32;jack_default_audio_sample_t*&#32;===&#32;float*</emphasis>
35 <emphasis role="comment">&#32;&#32;&#32;&#32;/***&#32;fill&#32;latter</emphasis>
36 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;frameElapsed&#32;:&#32;a&#32;new&#32;frame&#32;has&#32;been&#32;elapsed&#32;(enables&#32;visualization)</emphasis>
37 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;trackEnabled&#32;:&#32;ROI&apos;s&#32;tracking&#32;signal&#32;(updates&#32;visualization)</emphasis>
38 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;currenTone&#32;:&#32;audiolizer&apos;s&#32;generated&#32;frequency&#32;responce&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;currently&#32;controls&#32;the&#32;color&#32;changing&#32;--&gt;&#32;in&#32;other&#32;project,&#32;the&#32;mix&#32;should&#32;do&#32;it.</emphasis>
39 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;visualFrame&#32;:&#32;the&#32;whole&#32;frame&#32;of&#32;the&#32;camera&#32;when&#32;passed&#32;through&#32;```turn_Image_into_Sound()```&#32;and&#32;the&#32;visual&#32;output&#32;when&#32;passed&#32;through&#32;```and_Sound_into_Image()```&#32;</emphasis>
40 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;ROI&#32;:&#32;region&#32;of&#32;interest.Center(x,y),&#32;and&#32;volume(width,&#32;height)&#32;</emphasis>
41 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;//&#32;@TODO&#32;is&#32;to&#32;</emphasis>
42 <emphasis role="comment">&#32;&#32;&#32;&#32;*/</emphasis>
43 &#32;&#32;&#32;&#32;
44 <emphasis role="comment">//&#32;auto&#32;t1&#32;=&#32;std::chrono::high_resolution_clock::now();</emphasis>
45 
46 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;the&#32;input&#32;from&#32;camera&#32;--&gt;&#32;a&#32;signal</emphasis>
47 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;frameElapsed=<link linkend="_main_8cpp_1a7aa32fee41a7276003157e6b1a57ca0e">al</link>.<link linkend="_classAudiolizer_1a5482f721f05ec213d1ca0fd5224d7296">turn_Image_into_Sound</link>(<link linkend="_main_8cpp_1a7176f06959f418e3a5e063294559fe8a">trackEnabled</link>,<link linkend="_main_8cpp_1acd59d873186d5a56e9117111d56ef2ff">currenTone</link>,<link linkend="_main_8cpp_1ae8051b5253b0cd0841092a36b04bbfe6">visualFrame</link>,<link linkend="_main_8cpp_1a98706ce58e524373a53a3470073307d5">ROI</link>,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)left&#32;,&#32;&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)right);&#32;<emphasis role="comment">//&#32;rename&#32;frameElapsed&#32;with&#32;the&#32;var&#32;name&#32;&quot;imClock&quot;</emphasis>
48 
49 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(bt.isBeat((double&#32;*)in))</emphasis>
50 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;&#32;Beat!&#32;&quot;&lt;&lt;std::endl;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;do&#32;something&#32;on&#32;the&#32;beat</emphasis>
51 &#32;&#32;&#32;&#32;
52 &#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a72ea00c833e2db6b8eaaa12eb8998be1">exit_msg</link>=<link linkend="_main_8cpp_1aa18a433247736dad6f16a534dac5296a">vs</link>.<link linkend="_classVisualizer_1aaebea497f6be4cec9b3cadee0baed6ab">and_Sound_into_Image</link>((<emphasis role="keywordtype">float</emphasis>&#32;*)left,&#32;(<emphasis role="keywordtype">float</emphasis>&#32;*)right,&#32;<link linkend="_main_8cpp_1ae8051b5253b0cd0841092a36b04bbfe6">visualFrame</link>,&#32;frameElapsed,&#32;<link linkend="_main_8cpp_1a7176f06959f418e3a5e063294559fe8a">trackEnabled</link>,&#32;<link linkend="_main_8cpp_1acd59d873186d5a56e9117111d56ef2ff">currenTone</link>,&#32;<link linkend="_main_8cpp_1a98706ce58e524373a53a3470073307d5">ROI</link>);
53 
54 <emphasis role="comment">/*&#32;Getting&#32;number&#32;of&#32;milliseconds&#32;as&#32;a&#32;double.&#32;*/</emphasis>
55 <emphasis role="comment">//&#32;auto&#32;t2&#32;=&#32;std::chrono::high_resolution_clock::now();</emphasis>
56 <emphasis role="comment">//&#32;std::chrono::duration&lt;double,&#32;std::milli&gt;&#32;ms_double&#32;=&#32;t2&#32;-&#32;t1;</emphasis>
57 <emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;ms_double.count()&#32;&lt;&lt;&#32;&quot;&#32;ms\n&quot;;</emphasis>
58 
59 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&lt;&lt;&quot;----------------------------------------------------------------------------------------------------------------------------------------------------------&quot;&lt;&lt;std::endl;</emphasis>
60 &#32;&#32;&#32;&#32;
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_main_8cpp_1a72ea00c833e2db6b8eaaa12eb8998be1">exit_msg</link>){
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1aee07d9831de074ed10b7bc4718decc32">myAudioStream</link>.<link linkend="_classAudioStream_1a480e5d3468bfe9357dd6c40649b1e449">~AudioStream</link>();&#32;<emphasis role="comment">//&#32;check&#32;if&#32;jackshutdown&#32;is&#32;set&#32;appropriately</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1aa18a433247736dad6f16a534dac5296a">vs</link>.<link linkend="_classVisualizer_1a013ec3101407fbe4805f289bc32d1265">~Visualizer</link>();
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1a7aa32fee41a7276003157e6b1a57ca0e">al</link>.<link linkend="_classAudiolizer_1ae2d5ef5b64e46ce2f0b2820debd8b775">~Audiolizer</link>();
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bt.~Beatracker();</emphasis>
66 &#32;&#32;&#32;&#32;}
67 }
</programlisting>    </section><anchor xml:id="_audio_8h_1a79c9581f080b5c0d8388f9aa63765543"/>    <section>
    <title>streamAudio()</title>
<indexterm><primary>streamAudio</primary><secondary>audio.h</secondary></indexterm>
<indexterm><primary>audio.h</primary><secondary>streamAudio</secondary></indexterm>
<para><computeroutput>int streamAudio (jack_nframes_t nframes, void * arg)</computeroutput></para><para>

<para>A non-member fuction used to alias the <link linkend="_classAudioStream_1a94ed22346857a37b90110db868628145">AudioStream::streamBuffer</link> which is used as an argument in the AudioStream::jack_set_process_callback member function. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>jack_nframes</entry>
                                <entry>
<para>nframes - the buffer size </para>
</entry>
                            </row>
                            <row>
                                <entry>void</entry>
                                <entry>
<para>*arg - optional arguments </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
