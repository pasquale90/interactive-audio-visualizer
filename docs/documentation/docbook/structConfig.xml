<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structConfig">
<title>Config Struct Reference</title>
<indexterm><primary>Config</primary></indexterm>
<para>
<computeroutput>#include &lt;config.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structConfig_1a0b0b1d365b90430c5d9f3b07a091e110">Config</link> (int argc, char *argv[])</para>

<para>Struct constructor. It receives values from the program arguments, it uses the <link linkend="_classInputParser">InputParser</link> to parse them, and passes them in a form of a struct object to the rest of the files. </para>
</listitem>
            <listitem><para><link linkend="_structConfig_1abd0c571c116924871e30444b192b792a">Config</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_structConfig_1a67271f84972a0a9d00a24a8ffdbd2595">Config</link> (const <link linkend="_structConfig">Config</link> &amp;c)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_structConfig_1a543dce59b66475c5108088ee4ce1cdfc">~Config</link> ()</para>

<para>Class destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_structConfig_1a975933ecde91dc436d4ca39464cfd25f">display</link> ()</para>

<para>Display function. It prints out in the console all the parameter values. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_structConfig_1a3037a45aadc160e8b8ed6ac1def4a124">sampleRate</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a9e46723801ba5ee06f750c547b449516">quantization</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a4d651b482363174eee36f87c51376986">bufferSize</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a6e421d04e7e54e2288570047058076fc">minFrequency</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a0e47a2a4b74a5da2ac71dbfa8366baad">maxFrequency</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a1f527fc8c25d4043aefa3db14a2ec93e">fps</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1acb931d1a13113d0142e886d6ee84d42e">displayW</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a614b9c98e7c8866dd6874d8c1fa2fbed">displayH</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a2b252e84e61b7f7a956ee5b60d95e14c">camResW</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a7fa19a6d23b6abea005bed2195a26862">camResH</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a11fb8cf93445c40a5e5cc5bd84b058a7">camfps</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1ab7715bd284d9f1c2cbaff357ac7b8a02">radius</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1a795806a552a1d6f41b041e96af2decd0">roiSec</link></para>
</listitem>
            <listitem><para>int <link linkend="_structConfig_1acd67afb023cf0f4bcdd6e43017d56f9a">trackingAlg</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 7 of file config.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structConfig_1a0b0b1d365b90430c5d9f3b07a091e110"/>    <section>
    <title>Config()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<para><computeroutput>Config::Config (int argc, char * argv[])</computeroutput></para><para>

<para>Struct constructor. It receives values from the program arguments, it uses the <link linkend="_classInputParser">InputParser</link> to parse them, and passes them in a form of a struct object to the rest of the files. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>int</entry>
                                <entry>
<para>argc - number of arguments provided by the user </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>char* argv[] - arguments provided by the user </para>
</formalpara>
</para>
    </section><anchor xml:id="_structConfig_1abd0c571c116924871e30444b192b792a"/>    <section>
    <title>Config()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<para><computeroutput>Config::Config ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
    </section><anchor xml:id="_structConfig_1a67271f84972a0a9d00a24a8ffdbd2595"/>    <section>
    <title>Config()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>Config</secondary></indexterm>
<para><computeroutput>Config::Config (const <link linkend="_structConfig">Config</link> &amp; c)</computeroutput></para><para>

<para>Copy constructor. </para>
</para>
    </section><anchor xml:id="_structConfig_1a543dce59b66475c5108088ee4ce1cdfc"/>    <section>
    <title>~Config()</title>
<indexterm><primary>~Config</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>~Config</secondary></indexterm>
<para><computeroutput>Config::~Config ( )</computeroutput></para><para>

<para>Class destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structConfig_1a975933ecde91dc436d4ca39464cfd25f"/>    <section>
    <title>display()</title>
<indexterm><primary>display</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>display</secondary></indexterm>
<para><computeroutput>void Config::display ( )</computeroutput></para><para>

<para>Display function. It prints out in the console all the parameter values. </para>
</para>

<para><formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structConfig_1a4d651b482363174eee36f87c51376986"/>    <section>
    <title>bufferSize</title>
<indexterm><primary>bufferSize</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>bufferSize</secondary></indexterm>
<para><computeroutput>int Config::bufferSize</computeroutput></para><para>
Definition at line 34 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a11fb8cf93445c40a5e5cc5bd84b058a7"/>    <section>
    <title>camfps</title>
<indexterm><primary>camfps</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>camfps</secondary></indexterm>
<para><computeroutput>int Config::camfps</computeroutput></para><para>
Definition at line 45 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a7fa19a6d23b6abea005bed2195a26862"/>    <section>
    <title>camResH</title>
<indexterm><primary>camResH</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>camResH</secondary></indexterm>
<para><computeroutput>int Config::camResH</computeroutput></para><para>
Definition at line 44 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a2b252e84e61b7f7a956ee5b60d95e14c"/>    <section>
    <title>camResW</title>
<indexterm><primary>camResW</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>camResW</secondary></indexterm>
<para><computeroutput>int Config::camResW</computeroutput></para><para>
Definition at line 43 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a614b9c98e7c8866dd6874d8c1fa2fbed"/>    <section>
    <title>displayH</title>
<indexterm><primary>displayH</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>displayH</secondary></indexterm>
<para><computeroutput>int Config::displayH</computeroutput></para><para>
Definition at line 41 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1acb931d1a13113d0142e886d6ee84d42e"/>    <section>
    <title>displayW</title>
<indexterm><primary>displayW</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>displayW</secondary></indexterm>
<para><computeroutput>int Config::displayW</computeroutput></para><para>
Definition at line 40 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a1f527fc8c25d4043aefa3db14a2ec93e"/>    <section>
    <title>fps</title>
<indexterm><primary>fps</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>fps</secondary></indexterm>
<para><computeroutput>int Config::fps</computeroutput></para><para>
Definition at line 39 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a0e47a2a4b74a5da2ac71dbfa8366baad"/>    <section>
    <title>maxFrequency</title>
<indexterm><primary>maxFrequency</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>maxFrequency</secondary></indexterm>
<para><computeroutput>int Config::maxFrequency</computeroutput></para><para>
Definition at line 37 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a6e421d04e7e54e2288570047058076fc"/>    <section>
    <title>minFrequency</title>
<indexterm><primary>minFrequency</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>minFrequency</secondary></indexterm>
<para><computeroutput>int Config::minFrequency</computeroutput></para><para>
Definition at line 36 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a9e46723801ba5ee06f750c547b449516"/>    <section>
    <title>quantization</title>
<indexterm><primary>quantization</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>quantization</secondary></indexterm>
<para><computeroutput>int Config::quantization</computeroutput></para><para>
Definition at line 33 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1ab7715bd284d9f1c2cbaff357ac7b8a02"/>    <section>
    <title>radius</title>
<indexterm><primary>radius</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>radius</secondary></indexterm>
<para><computeroutput>int Config::radius</computeroutput></para><para>
Definition at line 47 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a795806a552a1d6f41b041e96af2decd0"/>    <section>
    <title>roiSec</title>
<indexterm><primary>roiSec</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>roiSec</secondary></indexterm>
<para><computeroutput>int Config::roiSec</computeroutput></para><para>
Definition at line 48 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1a3037a45aadc160e8b8ed6ac1def4a124"/>    <section>
    <title>sampleRate</title>
<indexterm><primary>sampleRate</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>sampleRate</secondary></indexterm>
<para><computeroutput>int Config::sampleRate</computeroutput></para><para>
Definition at line 32 of file config.h.</para>
    </section><anchor xml:id="_structConfig_1acd67afb023cf0f4bcdd6e43017d56f9a"/>    <section>
    <title>trackingAlg</title>
<indexterm><primary>trackingAlg</primary><secondary>Config</secondary></indexterm>
<indexterm><primary>Config</primary><secondary>trackingAlg</secondary></indexterm>
<para><computeroutput>int Config::trackingAlg</computeroutput></para><para>
Definition at line 50 of file config.h.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
src/<link linkend="_config_8h">config.h</link></section>
</section>
