<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classCamera">
<title>Camera Class Reference</title>
<indexterm><primary>Camera</primary></indexterm>
<para>
<computeroutput>#include &lt;camera.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classCamera_1a01f94c3543f56ede7af49dc778f19331">Camera</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classCamera_1ad1897942d0ccf91052386388a497349f">~Camera</link> ()</para>

<para>Class destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classCamera_1aac1401746621765e67ee6d48c615704f">setConfig</link> (const <link linkend="_structConfig">Config</link> &amp;)</para>

<para>Class implicit constructor. </para>
</listitem>
            <listitem><para>bool <link linkend="_classCamera_1abf92424200235ed48ec2d7135f02127e">capture</link> (cv::Mat &amp;)</para>

<para>Method for capturing frames received from the camera. It is called by <link linkend="_classAudiolizer">Audiolizer</link>. </para>
</listitem>
            <listitem><para>bool <link linkend="_classCamera_1ab1640e09af17f9b84c6635a94be9d5c0">frame_elapsed</link> ()</para>

<para>Method that make use of std::atomic variable frameToggle to indicate whether a new frame elapsed. </para>
</listitem>
            <listitem><para>void <link linkend="_classCamera_1ac1fecf974797af37cdc225fd5058d58a">display_config</link> ()</para>

<para>displays config variables </para>
</listitem>
            <listitem><para>void <link linkend="_classCamera_1ac6998631125fb706380fe7858c88c9ee">get_current_frame</link> (cv::Mat &amp;)</para>

<para>Method for returning the captured camera frame. </para>
</listitem>
            <listitem><para>int <link linkend="_classCamera_1aa3d65d169260075ef438eea63c0f5ddf">get_fps</link> ()</para>

<para>Method for returning the value of frames per second. </para>
</listitem>
            <listitem><para>int <link linkend="_classCamera_1a6ac15ba10fa5cf007a90d87a41dfe22d">get_actual_fps</link> ()</para>

<para>Method for returning the value of actual frames per second, based on hardware capacity. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 12 of file camera.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classCamera_1a01f94c3543f56ede7af49dc778f19331"/>    <section>
    <title>Camera()</title>
<indexterm><primary>Camera</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>Camera</secondary></indexterm>
<para><computeroutput>Camera::Camera ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
    </section><anchor xml:id="_classCamera_1ad1897942d0ccf91052386388a497349f"/>    <section>
    <title>~Camera()</title>
<indexterm><primary>~Camera</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>~Camera</secondary></indexterm>
<para><computeroutput>Camera::~Camera ( )</computeroutput></para><para>

<para>Class destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classCamera_1abf92424200235ed48ec2d7135f02127e"/>    <section>
    <title>capture()</title>
<indexterm><primary>capture</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>capture</secondary></indexterm>
<para><computeroutput>bool Camera::capture (cv::Mat &amp; )</computeroutput></para><para>

<para>Method for capturing frames received from the camera. It is called by <link linkend="_classAudiolizer">Audiolizer</link>. </para>
</para>
    </section><anchor xml:id="_classCamera_1ac1fecf974797af37cdc225fd5058d58a"/>    <section>
    <title>display_config()</title>
<indexterm><primary>display_config</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>display_config</secondary></indexterm>
<para><computeroutput>void Camera::display_config ( )</computeroutput></para><para>

<para>displays config variables </para>
</para>
    </section><anchor xml:id="_classCamera_1ab1640e09af17f9b84c6635a94be9d5c0"/>    <section>
    <title>frame_elapsed()</title>
<indexterm><primary>frame_elapsed</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>frame_elapsed</secondary></indexterm>
<para><computeroutput>bool Camera::frame_elapsed ( )</computeroutput></para><para>

<para>Method that make use of std::atomic variable frameToggle to indicate whether a new frame elapsed. </para>
</para>
    </section><anchor xml:id="_classCamera_1a6ac15ba10fa5cf007a90d87a41dfe22d"/>    <section>
    <title>get_actual_fps()</title>
<indexterm><primary>get_actual_fps</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>get_actual_fps</secondary></indexterm>
<para><computeroutput>int Camera::get_actual_fps ( )</computeroutput></para><para>

<para>Method for returning the value of actual frames per second, based on hardware capacity. </para>
</para>
    </section><anchor xml:id="_classCamera_1ac6998631125fb706380fe7858c88c9ee"/>    <section>
    <title>get_current_frame()</title>
<indexterm><primary>get_current_frame</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>get_current_frame</secondary></indexterm>
<para><computeroutput>void Camera::get_current_frame (cv::Mat &amp; )</computeroutput></para><para>

<para>Method for returning the captured camera frame. </para>
</para>
    </section><anchor xml:id="_classCamera_1aa3d65d169260075ef438eea63c0f5ddf"/>    <section>
    <title>get_fps()</title>
<indexterm><primary>get_fps</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>get_fps</secondary></indexterm>
<para><computeroutput>int Camera::get_fps ( )</computeroutput></para><para>

<para>Method for returning the value of frames per second. </para>
</para>
    </section><anchor xml:id="_classCamera_1aac1401746621765e67ee6d48c615704f"/>    <section>
    <title>setConfig()</title>
<indexterm><primary>setConfig</primary><secondary>Camera</secondary></indexterm>
<indexterm><primary>Camera</primary><secondary>setConfig</secondary></indexterm>
<para><computeroutput>void Camera::setConfig (const <link linkend="_structConfig">Config</link> &amp; )</computeroutput></para><para>

<para>Class implicit constructor. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
src/<link linkend="_camera_8h">camera.h</link></section>
</section>
