<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_audio_8h_source" xml:lang="en-US">
<title>audio.h</title>
<indexterm><primary>include/audio.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_audio_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;AUDIO_H</emphasis>
<anchor xml:id="_audio_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;AUDIO_H</emphasis>
<anchor xml:id="_audio_8h_source_1l00003"/>00003 
<anchor xml:id="_audio_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;atomic&gt;</emphasis>
<anchor xml:id="_audio_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;mutex&gt;</emphasis>
<anchor xml:id="_audio_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;condition_variable&gt;</emphasis>
<anchor xml:id="_audio_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;jack/jack.h&gt;</emphasis>
<anchor xml:id="_audio_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;jack/types.h&gt;</emphasis>
<anchor xml:id="_audio_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_sine_8h">sine.h</link>&quot;</emphasis>
<anchor xml:id="_audio_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_tone_8h">tone.h</link>&quot;</emphasis>
<anchor xml:id="_audio_8h_source_1l00011"/>00011 
<anchor xml:id="_audio_8h_source_1l00012"/>00012 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classConfig">Config</link>;
<anchor xml:id="_audio_8h_source_1l00013"/>00013 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classWaveform">Waveform</link>;
<anchor xml:id="_audio_8h_source_1l00014"/>00014 
<anchor xml:id="_audio_8h_source_1l00022"/><link linkend="_classAudioStream">00022</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classAudioStream">AudioStream</link>{
<anchor xml:id="_audio_8h_source_1l00023"/>00023 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_audio_8h_source_1l00024"/>00024 
<anchor xml:id="_audio_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<link linkend="_classAudioStream_1ab2e106f7e2f70f0cfb1d7b171da71f16">AudioStream</link>();&#32;
<anchor xml:id="_audio_8h_source_1l00029"/>00029 
<anchor xml:id="_audio_8h_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<link linkend="_classAudioStream_1a480e5d3468bfe9357dd6c40649b1e449">~AudioStream</link>();
<anchor xml:id="_audio_8h_source_1l00034"/>00034 
<anchor xml:id="_audio_8h_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioStream_1ab4f577911f9c1b1ae64de56e6b2b96af">clientConnect</link>(std::mutex&amp;,&#32;std::condition_variable&amp;,&#32;<emphasis role="keywordtype">bool</emphasis>&amp;);
<anchor xml:id="_audio_8h_source_1l00042"/>00042 
<anchor xml:id="_audio_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioStream_1a86a07551cb80ac8248ad0b1953ffb81d">closeStream</link>();
<anchor xml:id="_audio_8h_source_1l00047"/>00047 
<anchor xml:id="_audio_8h_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classAudioStream_1ac6b5d301d25e74b9b18a58cf5d854385">streamBuffer</link>();
<anchor xml:id="_audio_8h_source_1l00053"/>00053 
<anchor xml:id="_audio_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioStream_1a79ba2b085605b367698a204bb28fc6e7">update</link>(<emphasis role="keywordtype">int</emphasis>,&#32;&#32;<emphasis role="keywordtype">float</emphasis>);
<anchor xml:id="_audio_8h_source_1l00061"/>00061 
<anchor xml:id="_audio_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioStream_1a0f4ac8181f32c9b1466eb35ed723b167">setVisualizerUpdater</link>(std::function&lt;<emphasis role="keywordtype">void</emphasis>(<emphasis role="keywordtype">float</emphasis>)&gt;);
<anchor xml:id="_audio_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;
<anchor xml:id="_audio_8h_source_1l00073"/><link linkend="_classAudioStream_1a2e8501a76d4801c9f91bda8bfba583e4">00073</link> &#32;&#32;&#32;&#32;&#32;<link linkend="_classAudioStream_1a2e8501a76d4801c9f91bda8bfba583e4">AudioStream</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classAudioStream">AudioStream</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audio_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;
<anchor xml:id="_audio_8h_source_1l00078"/><link linkend="_classAudioStream_1aad83ff2805214222217732d8acc76ff9">00078</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioStream_1aad83ff2805214222217732d8acc76ff9">AudioStream</link>(<link linkend="_classAudioStream">AudioStream</link>&amp;&amp;)&#32;&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audio_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;
<anchor xml:id="_audio_8h_source_1l00083"/><link linkend="_classAudioStream_1a012dba5698b8dab4d86d23f531a97181">00083</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioStream">AudioStream</link>&amp;&#32;<link linkend="_classAudioStream_1a012dba5698b8dab4d86d23f531a97181">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classAudioStream">AudioStream</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audio_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;
<anchor xml:id="_audio_8h_source_1l00088"/><link linkend="_classAudioStream_1aa193e5e2a4946523712422a6503a87c1">00088</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioStream">AudioStream</link>&amp;&#32;<link linkend="_classAudioStream_1aa193e5e2a4946523712422a6503a87c1">operator=</link>(<link linkend="_classAudioStream">AudioStream</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audio_8h_source_1l00089"/>00089 
<anchor xml:id="_audio_8h_source_1l00090"/>00090 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_audio_8h_source_1l00091"/>00091 
<anchor xml:id="_audio_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structAudioConfig">AudioConfig</link>&amp;&#32;audiocfg;
<anchor xml:id="_audio_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;
<anchor xml:id="_audio_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*client_name&#32;;
<anchor xml:id="_audio_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**todevice;
<anchor xml:id="_audio_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;jack_client_t&#32;*client;
<anchor xml:id="_audio_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;jack_port_t&#32;*&#32;output_ports[2];
<anchor xml:id="_audio_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*outputBuffers[2];
<anchor xml:id="_audio_8h_source_1l00099"/>00099 
<anchor xml:id="_audio_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<link linkend="_classSine">Sine</link>&#32;sine;
<anchor xml:id="_audio_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;void&#32;(<link linkend="_classSine">Sine</link>::*make_sound)(<link linkend="_structTone">Tone</link>&amp;,<emphasis role="keywordtype">float</emphasis>*[2])&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_audio_8h_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<link linkend="_structTone">Tone</link>&#32;tone;
<anchor xml:id="_audio_8h_source_1l00103"/>00103 
<anchor xml:id="_audio_8h_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;streamAudio&#32;(jack_nframes_t&#32;nframes,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*arg);
<anchor xml:id="_audio_8h_source_1l00109"/>00109 
<anchor xml:id="_audio_8h_source_1l00110"/>00110 
<anchor xml:id="_audio_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;jack_shutdown&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*arg);
<anchor xml:id="_audio_8h_source_1l00114"/>00114 };
<anchor xml:id="_audio_8h_source_1l00115"/>00115 
<anchor xml:id="_audio_8h_source_1l00116"/>00116 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_audio_8h_source_1l00117"/>00117 
<anchor xml:id="_audio_8h_source_1l00118"/>00118 
<anchor xml:id="_audio_8h_source_1l00119"/>00119 
<anchor xml:id="_audio_8h_source_1l00120"/>00120 
<anchor xml:id="_audio_8h_source_1l00121"/>00121 
</programlisting></section>
