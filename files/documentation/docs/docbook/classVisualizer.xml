<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classVisualizer" xml:lang="en-US">
<title>Visualizer Class Reference</title>
<indexterm><primary>Visualizer</primary></indexterm>
<para>

<para>This class is responsible for managing the camera feed, tracking objects, triggering, and broadcasting the visualized frame to the <link linkend="_classIAV">IAV</link> pipeline. </para>
 
</para>
<para>
<computeroutput>#include &lt;visualizer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classVisualizer_1a104487003c9fea602e26c072aae27efc">Visualizer</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_classVisualizer_1a013ec3101407fbe4805f289bc32d1265">~Visualizer</link> ()</para>

<para>Class destructor. </para>
</listitem>
            <listitem><para><link linkend="_classVisualizer_1a74e89c75b05f50baeb692fd62437e4e4">Visualizer</link> (const <link linkend="_classVisualizer">Visualizer</link> &amp;)=delete</para>

<para>Copy constructor is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classVisualizer_1a28d372074c4cacdc426cdcfe56973b1b">Visualizer</link> (<link linkend="_classVisualizer">Visualizer</link> &amp;&amp;)=delete</para>

<para>Move constructor is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classVisualizer">Visualizer</link> &amp; <link linkend="_classVisualizer_1a82746f3d798c920bf97fe5fcc97588bf">operator=</link> (const <link linkend="_classVisualizer">Visualizer</link> &amp;)=delete</para>

<para>Copy assignment operator is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classVisualizer">Visualizer</link> &amp; <link linkend="_classVisualizer_1ac4737c1975ddb0072fab8ffbe942ee9f">operator=</link> (<link linkend="_classVisualizer">Visualizer</link> &amp;&amp;)=delete</para>

<para>Move assignment operator is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para>void <link linkend="_classVisualizer_1a968f280b3f09b86105bc662021babbe9">broadcast</link> ()</para>

<para>Broadcasts the visualized frame to the <link linkend="_classIAV">IAV</link> processing pipeline. </para>
</listitem>
            <listitem><para>void <link linkend="_classVisualizer_1a2c7e8bfe6cc35f01084ae3aeaae768db">setAudiolizerUpdater</link> (std::function&lt; void(const bool, const bool, const <link linkend="_structRegionOfInterest">RegionOfInterest</link> &amp;, <link linkend="_structTone">Tone</link> &amp;)&gt;)</para>

<para>Sets the function that is to be used for receiving the <link linkend="_classAudiolizer">Audiolizer</link>&apos;s update signal. </para>
</listitem>
            <listitem><para>void <link linkend="_classVisualizer_1a1e2c66042ba2df8011fe934abad95f7b">updateAudioSignal</link> (float)</para>

<para>Receives the audio signal by the <link linkend="_classSine">Sine</link> instance, to update the <link linkend="_classWaveform">Waveform</link> and <link linkend="_classSpectrogram">Spectrogram</link> instances. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This class is responsible for managing the camera feed, tracking objects, triggering, and broadcasting the visualized frame to the <link linkend="_classIAV">IAV</link> pipeline. </para>
<para>
Definition at line <link linkend="_visualizer_8h_source_1l00017">17</link> of file <link linkend="_visualizer_8h_source">visualizer.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classVisualizer_1a104487003c9fea602e26c072aae27efc"/><section>
    <title>Visualizer()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<para><computeroutput>Visualizer::Visualizer ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line <link linkend="_visualizer_8cpp_source_1l00011">11</link> of file <link linkend="_visualizer_8cpp_source">visualizer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00012 
00013 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;W=cfg.<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1a633402e1095e221e678ce55fee7f3f9e">dispResW</link>.load();
00014 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;H=cfg.<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1ae781f975c0fac0c92d0f1802468ee578">dispResH</link>.load();
00015 
00016 &#32;&#32;&#32;&#32;cv::namedWindow(<emphasis role="stringliteral">&quot;Interactive&#32;Audio&#32;Visualizer&quot;</emphasis>,cv::WINDOW_AUTOSIZE);
00017 &#32;&#32;&#32;&#32;cv::Mat&#32;img(&#32;H&#32;,&#32;W,&#32;CV_8UC3,cv::Scalar(0,0,0));
00018 &#32;&#32;&#32;&#32;visualFrame&#32;=&#32;img;
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
00020 &#32;&#32;&#32;&#32;_create_camMask();
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cameraW&#32;=&#32;cfg.<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>.load();
00023 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cameraH&#32;=&#32;cfg.<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a5aacf3ba605a2c6bfa6a88b971557fa2">camResH</link>.load();
00024 &#32;&#32;&#32;&#32;LR&#32;=&#32;W&#32;-&#32;cameraW;
00025 &#32;&#32;&#32;&#32;TB&#32;=&#32;H&#32;-&#32;cameraH;
00026 
00027 &#32;&#32;&#32;&#32;transpose_ratio_x&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(W)&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(cameraW)&#32;/&#32;2.0f;
00028 &#32;&#32;&#32;&#32;transpose_ratio_y&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(H)&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(cameraH)&#32;/&#32;2.0f;
00029 
00030 &#32;&#32;&#32;&#32;trackingToggle&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00031 &#32;&#32;&#32;&#32;
00032 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nfft&#32;=&#32;spectrogram.<link linkend="_classSpectrogram_1a9e2b3f56852a55ce83311d57104b7208">get_numFFTPoints</link>();
00033 &#32;&#32;&#32;&#32;specMagnitude.reserve(nfft);
00034 &#32;&#32;&#32;&#32;specMagnitude.resize(nfft);
00035 
00036 &#32;&#32;&#32;&#32;_set_freq_midBoundaries();
00037 }
</programlisting></section>
<anchor xml:id="_classVisualizer_1a013ec3101407fbe4805f289bc32d1265"/><section>
    <title>~Visualizer()</title>
<indexterm><primary>~Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>~Visualizer</secondary></indexterm>
<para><computeroutput>Visualizer::~Visualizer ( )</computeroutput></para><para>

<para>Class destructor. </para>
</para>
<para>
Definition at line <link linkend="_visualizer_8cpp_source_1l00187">187</link> of file <link linkend="_visualizer_8cpp_source">visualizer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00188 &#32;&#32;&#32;&#32;cv::destroyWindow(<emphasis role="stringliteral">&quot;Interactive&#32;Audio&#32;Visualizer&quot;</emphasis>);&#32;&#32;
00189 &#32;&#32;&#32;&#32;visualFrame.release();
00190 &#32;&#32;&#32;&#32;cameraFrame.release();
00191 &#32;&#32;&#32;&#32;camBinaryMask.release();
00192 }
</programlisting></section>
<anchor xml:id="_classVisualizer_1a74e89c75b05f50baeb692fd62437e4e4"/><section>
    <title>Visualizer()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<para><computeroutput>Visualizer::Visualizer (const <link linkend="_classVisualizer">Visualizer</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Copy constructor is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classVisualizer_1a28d372074c4cacdc426cdcfe56973b1b"/><section>
    <title>Visualizer()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>Visualizer</secondary></indexterm>
<para><computeroutput>Visualizer::Visualizer (<link linkend="_classVisualizer">Visualizer</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Move constructor is deleted to prevent accidental use. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classVisualizer_1a968f280b3f09b86105bc662021babbe9"/><section>
    <title>broadcast()</title>
<indexterm><primary>broadcast</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>broadcast</secondary></indexterm>
<para><computeroutput>void Visualizer::broadcast ( )</computeroutput></para><para>

<para>Broadcasts the visualized frame to the <link linkend="_classIAV">IAV</link> processing pipeline. </para>
</para>

<para><note><title>Note</title>

<para>Runs in a separate thread. </para>
</note>
<formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_visualizer_8cpp_source_1l00142">142</link> of file <link linkend="_visualizer_8cpp_source">visualizer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00143 
00144 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;trackingEnabled,trackingUpdated;
00145 &#32;&#32;&#32;&#32;<link linkend="_structRegionOfInterest">RegionOfInterest</link>&#32;trackingSig;
00146 &#32;&#32;&#32;&#32;<link linkend="_structTone">Tone</link>&#32;tone;
00147 
00148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>){
00149 
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;camera&#32;in&#32;visualizer</emphasis>
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;frameElapsed&#32;=&#32;camera.<link linkend="_classCamera_1abf92424200235ed48ec2d7135f02127e">capture</link>(cameraFrame);&#32;<emphasis role="comment">//&#32;get&#32;data</emphasis>
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frameElapsed){
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;
00155 
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;remaining_percentage;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingEnabled&#32;=&#32;trigger.<link linkend="_classTrigger_1a0f1b544e6fdc6ed75b2888113fc413a2">isTrackingEnabled</link>(remaining_percentage);
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateTrackingMode(trackingEnabled);
00159 
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trackingEnabled){&#32;<emphasis role="comment">//&#32;preprocess&#32;visual_frame&#32;--&gt;&#32;&#32;&#32;doesn&apos;t&#32;depict&#32;the&#32;frame,&#32;it&#32;just&#32;edits&#32;it&#32;so&#32;it&#32;does&#32;not&#32;require&#32;a&#32;new&#32;frame&#32;to&#32;be&#32;captured&#32;by&#32;the&#32;camera.</emphasis>
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingUpdated&#32;=&#32;videoTracker.<link linkend="_classVideoTracker_1a548651167191b0d3f5e69d252e3f30da">trackObject</link>(cameraFrame,&#32;trackingSig);
00163 
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!trackingUpdated){
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reset</emphasis>
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trigger.<link linkend="_classTrigger_1a465a643de1ace6e23b5d4e0f8c94d5a0">reset</link>();
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;update&#32;the&#32;current&#32;visualframe&#32;according&#32;to&#32;the&#32;changing&#32;of&#32;the&#32;tracking&#32;stimulus</emphasis>
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_set_BG_manually(tone);
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_set_FG_manually(trackingSig);
00172 
00173 
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>{
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_setToCamera(remaining_percentage);
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingUpdated&#32;=&#32;trackingEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00178 
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateAudioLizer(trackingUpdated,&#32;trackingEnabled,&#32;trackingSig,&#32;tone);
00180 
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;exit_msg&#32;=&#32;_showFrame();
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exit_msg)
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00184 &#32;&#32;&#32;&#32;}
00185 }
</programlisting></section>
<anchor xml:id="_classVisualizer_1a82746f3d798c920bf97fe5fcc97588bf"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classVisualizer">Visualizer</link> &amp; Visualizer::operator= (const <link linkend="_classVisualizer">Visualizer</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Copy assignment operator is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classVisualizer_1ac4737c1975ddb0072fab8ffbe942ee9f"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classVisualizer">Visualizer</link> &amp; Visualizer::operator= (<link linkend="_classVisualizer">Visualizer</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Move assignment operator is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classVisualizer_1a2c7e8bfe6cc35f01084ae3aeaae768db"/><section>
    <title>setAudiolizerUpdater()</title>
<indexterm><primary>setAudiolizerUpdater</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>setAudiolizerUpdater</secondary></indexterm>
<para><computeroutput>void Visualizer::setAudiolizerUpdater (std::function&lt; void(const bool, const bool, const <link linkend="_structRegionOfInterest">RegionOfInterest</link> &amp;, <link linkend="_structTone">Tone</link> &amp;)&gt; function)</computeroutput></para><para>

<para>Sets the function that is to be used for receiving the <link linkend="_classAudiolizer">Audiolizer</link>&apos;s update signal. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::function&lt;void(const</entry><entry>
<para>bool, const bool, const <link linkend="_structRegionOfInterest">RegionOfInterest</link>&amp;, <link linkend="_structTone">Tone</link>&amp;)&gt; - The function to be called for receiving the <link linkend="_classAudiolizer">Audiolizer</link>&apos;s update signal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>AudiolizerUpdater</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>1</entry><entry>
<para>const bool trackingUpdated - variable that indicates whether there is a new tracking signal.. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>AudiolizerUpdater</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>2</entry><entry>
<para>const bool trackingEnabled - variable that indicates whether the tracking is enabled or not. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>AudiolizerUpdater</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>3</entry><entry>
<para>const <link linkend="_structRegionOfInterest">RegionOfInterest</link>&amp; roi - variable passed by reference that updates the value of the current tracking signal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>AudiolizerUpdater</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>4</entry><entry>
<para><link linkend="_structTone">Tone</link>&amp; - the tone object for storing the current frequency and volume. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_visualizer_8cpp_source_1l00039">39</link> of file <link linkend="_visualizer_8cpp_source">visualizer.cpp</link>.</para>
<programlisting linenumbering="unnumbered{
00040 &#32;&#32;&#32;&#32;updateAudioLizer&#32;=&#32;std::move(function);
00041 }
</programlisting></section>
<anchor xml:id="_classVisualizer_1a1e2c66042ba2df8011fe934abad95f7b"/><section>
    <title>updateAudioSignal()</title>
<indexterm><primary>updateAudioSignal</primary><secondary>Visualizer</secondary></indexterm>
<indexterm><primary>Visualizer</primary><secondary>updateAudioSignal</secondary></indexterm>
<para><computeroutput>void Visualizer::updateAudioSignal (float newValue)</computeroutput></para><para>

<para>Receives the audio signal by the <link linkend="_classSine">Sine</link> instance, to update the <link linkend="_classWaveform">Waveform</link> and <link linkend="_classSpectrogram">Spectrogram</link> instances. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>float</entry><entry>
<para>- the audio signal received by the <link linkend="_classSine">Sine</link> instance. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_visualizer_8cpp_source_1l00055">55</link> of file <link linkend="_visualizer_8cpp_source">visualizer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;waveform.<link linkend="_classWaveform_1a6b4f4455a6a8ae2222f967e88b80460b">write</link>(newValue);
00057 &#32;&#32;&#32;&#32;spectrogram.<link linkend="_classSpectrogram_1ab4f694b0b0fac913263703b588361090">write</link>(newValue);
00058 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/<link linkend="_visualizer_8h">visualizer.h</link>src/<link linkend="_visualizer_8cpp">visualizer.cpp</link></section>
</section>
