<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classTimer" xml:lang="en-US">
<title>Timer Class Reference</title>
<indexterm><primary>Timer</primary></indexterm>
<para>

<para>A class responsible for managing a timer. </para>
 
</para>
<para>
<computeroutput>#include &lt;timer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classTimer_1a5f16e8da27d2a5a5242dead46de05d97">Timer</link> ()</para>

<para>Default constructor. Initializes the timer with a default time of 0 seconds. </para>
</listitem>
            <listitem><para>void <link linkend="_classTimer_1a40123f84a3b830f2721bf4ed0d0b64f8">setTimer</link> (int)</para>

<para>Sets the timer to a specific time in seconds. </para>
</listitem>
            <listitem><para>void <link linkend="_classTimer_1a3a8b5272198d029779dc9302a54305a8">start</link> ()</para>

<para>Starts the timer. </para>
</listitem>
            <listitem><para>bool <link linkend="_classTimer_1aa8cb793518f8630a02c526c2f1666f62">update</link> (int &amp;)</para>

<para>Updates the timer. </para>
</listitem>
            <listitem><para>int <link linkend="_classTimer_1a904b079e716d79ae9acff4ef84fff4b7">getRemainingTime</link> () const</para>

<para>Gets the remaining time for display or logging purposes. </para>
</listitem>
            <listitem><para>bool <link linkend="_classTimer_1a35483f893f25c87981e8ca97cff74bd3">isTimerFinished</link> () const</para>

<para>Checks if the timer has finished. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A class responsible for managing a timer. </para>
<para>
Definition at line <link linkend="_timer_8h_source_1l00009">9</link> of file <link linkend="_timer_8h_source">timer.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classTimer_1a5f16e8da27d2a5a5242dead46de05d97"/><section>
    <title>Timer()</title>
<indexterm><primary>Timer</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>Timer</secondary></indexterm>
<para><computeroutput>Timer::Timer ( )</computeroutput></para><para>

<para>Default constructor. Initializes the timer with a default time of 0 seconds. </para>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00004">4</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00004 :&#32;initialSeconds(0),&#32;remainingTimeMilliseconds(0){}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classTimer_1a904b079e716d79ae9acff4ef84fff4b7"/><section>
    <title>getRemainingTime()</title>
<indexterm><primary>getRemainingTime</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>getRemainingTime</secondary></indexterm>
<para><computeroutput>int Timer::getRemainingTime ( ) const</computeroutput></para><para>

<para>Gets the remaining time for display or logging purposes. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int - The remaining time in seconds. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00039">39</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;remainingTimeMilliseconds&#32;/&#32;1000;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;milliseconds&#32;back&#32;to&#32;seconds</emphasis>
00041 }
</programlisting></section>
<anchor xml:id="_classTimer_1a35483f893f25c87981e8ca97cff74bd3"/><section>
    <title>isTimerFinished()</title>
<indexterm><primary>isTimerFinished</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>isTimerFinished</secondary></indexterm>
<para><computeroutput>bool Timer::isTimerFinished ( ) const</computeroutput></para><para>

<para>Checks if the timer has finished. </para>
</para>

<para><formalpara><title>Returns</title>

<para>bool - True if the timer has finished, false otherwise. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00044">44</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;remainingTimeMilliseconds&#32;&lt;=&#32;0;
00046 }
</programlisting></section>
<anchor xml:id="_classTimer_1a40123f84a3b830f2721bf4ed0d0b64f8"/><section>
    <title>setTimer()</title>
<indexterm><primary>setTimer</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>setTimer</secondary></indexterm>
<para><computeroutput>void Timer::setTimer (int seconds)</computeroutput></para><para>

<para>Sets the timer to a specific time in seconds. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>seconds</entry><entry>
<para>- The new time in seconds for the timer. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00006">6</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00007 &#32;&#32;&#32;&#32;initialSeconds&#32;=&#32;seconds;&#32;&#32;
00008 &#32;&#32;&#32;&#32;remainingTimeMilliseconds&#32;=&#32;seconds&#32;*&#32;1000;&#32;
00009 &#32;&#32;&#32;&#32;lastUpdateTime&#32;=&#32;std::chrono::steady_clock::now();
00010 }
</programlisting></section>
<anchor xml:id="_classTimer_1a3a8b5272198d029779dc9302a54305a8"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void Timer::start ( )</computeroutput></para><para>

<para>Starts the timer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00012">12</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00013 &#32;&#32;&#32;&#32;lastUpdateTime&#32;=&#32;std::chrono::steady_clock::now();&#32;
00014 }
</programlisting></section>
<anchor xml:id="_classTimer_1aa8cb793518f8630a02c526c2f1666f62"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>Timer</secondary></indexterm>
<indexterm><primary>Timer</primary><secondary>update</secondary></indexterm>
<para><computeroutput>bool Timer::update (int &amp; secondsElapsed)</computeroutput></para><para>

<para>Updates the timer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_timer_8cpp_source_1l00016">16</link> of file <link linkend="_timer_8cpp_source">timer.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00017 
00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;time&#32;passed&#32;since&#32;last&#32;update</emphasis>
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;now&#32;=&#32;std::chrono::steady_clock::now();
00020 &#32;&#32;&#32;&#32;std::chrono::duration&lt;int64_t,&#32;std::milli&gt;&#32;elapsed&#32;=&#32;std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(now&#32;-&#32;lastUpdateTime);
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Subtract&#32;elapsed&#32;milliseconds&#32;from&#32;the&#32;remaining&#32;time</emphasis>
00023 &#32;&#32;&#32;&#32;remainingTimeMilliseconds&#32;-=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(elapsed.count());&#32;&#32;
00024 &#32;&#32;&#32;&#32;lastUpdateTime&#32;=&#32;now;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;last&#32;time&#32;frame</emphasis>
00025 
00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;timer&#32;has&#32;finished</emphasis>
00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(remainingTimeMilliseconds&#32;&lt;=&#32;0)&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remainingTimeMilliseconds&#32;=&#32;0;
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;secondsElapsed&#32;=&#32;initialSeconds;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;elapsed&#32;time&#32;to&#32;the&#32;initial&#32;value</emphasis>
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;
00031 &#32;&#32;&#32;&#32;}
00032 
00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;elapsed&#32;time&#32;in&#32;seconds&#32;(rounded)</emphasis>
00034 &#32;&#32;&#32;&#32;secondsElapsed&#32;=&#32;remainingTimeMilliseconds;
00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00036 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/<link linkend="_timer_8h">timer.h</link>src/<link linkend="_timer_8cpp">timer.cpp</link></section>
</section>
