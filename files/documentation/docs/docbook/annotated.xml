<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_structAudioConfig">AudioConfig</link>
<para>Struct to hold audio configuration settings </para>
<link linkend="_classAudiolizer">Audiolizer</link>
<para>A class responsible for translating tracking signal into audio frequency </para>
<link linkend="_classAudioServer">AudioServer</link>
<para>The jack-audio server running on the alsa drivers </para>
<link linkend="_classAudioStream">AudioStream</link>
<para>A class representing the audio streaming functionality </para>
<link linkend="_classCamera">Camera</link>
<para>Class representing a camera object </para>
<link linkend="_structCameraConfig">CameraConfig</link>
<para>Struct to hold camera configuration settings </para>
<link linkend="_structCameraInfo">CameraInfo</link>
<para>Represents information about a camera </para>
<link linkend="_classConfig">Config</link>
<para>Singleton class to manage configuration settings, providing a unique point of access to the configuration settings </para>
<link linkend="_structDisplayConfig">DisplayConfig</link>
<para>Struct to hold display configuration settings </para>
<link linkend="_classGUI">GUI</link>
<para>Class to manage the <link linkend="_classGUI">GUI</link> components and settings </para>
<link linkend="_classIAV">IAV</link>
<para>Class to manage the <link linkend="_classIAV">IAV</link> multi-threaded processing pipeline </para>
<link linkend="_structIAVConfig">IAVConfig</link>
<para>Struct to hold <link linkend="_classIAV">IAV</link> configuration settings </para>
<link linkend="_structAudioHardware_1_1Info">AudioHardware::Info</link>
<para>Structure representing audio hardware information </para>
<link linkend="_structRegionOfInterest">RegionOfInterest</link>
<para>Struct to hold the region of interest (ROI) data </para>
<link linkend="_classSettingsDB">SettingsDB</link>
<para>Class to manage settings using a SQLite database </para>
<link linkend="_classSine">Sine</link>
<para>Class responsible for generating sine wave signals for audio processing </para>
<link linkend="_classSpectrogram">Spectrogram</link>
<para>Ring buffer class to generate a spectrogram of the audio signal using the Fast Fourier Transform (FFT) </para>
<link linkend="_classTimer">Timer</link>
<para>A class responsible for managing a timer </para>
<link linkend="_structTone">Tone</link>
<para>A structure to represent a tone with its frequency and volume </para>
<link linkend="_classTrigger">Trigger</link>
<para>A class responsible for managing the trigger behavior </para>
<link linkend="_classVideoTracker">VideoTracker</link>
<para>A class responsible for tracking objects in the camera feed </para>
<link linkend="_classVisualizer">Visualizer</link>
<para>This class is responsible for managing the camera feed, tracking objects, triggering, and broadcasting the visualized frame to the <link linkend="_classIAV">IAV</link> pipeline </para>
<link linkend="_classWaveform">Waveform</link>
<para>A circular buffer for storing audio samples </para>
</section>
