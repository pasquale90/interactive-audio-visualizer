<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_config_8cpp_source" xml:lang="en-US">
<title>config.cpp</title>
<indexterm><primary>src/config.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_config_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_config_8h">config.h</link>&quot;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_settings_8h">settings.h</link>&quot;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00004"/>00004 
<anchor xml:id="_config_8cpp_source_1l00005"/>00005 <link linkend="_classConfig_1ad2e93ef08a872f46ca139ad28d64e2f9">Config::Config</link>(){
<anchor xml:id="_config_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;
<anchor xml:id="_config_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<link linkend="_classSettingsDB">SettingsDB</link>&#32;settingsDB;
<anchor xml:id="_config_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;settings&#32;=&#32;settingsDB.<link linkend="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9">loadSettings</link>();
<anchor xml:id="_config_8cpp_source_1l00009"/>00009 
<anchor xml:id="_config_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!settings.empty()){
<anchor xml:id="_config_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;audio&#32;configuration</emphasis>
<anchor xml:id="_config_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1a9f06f009be657b8e4197808c765ee56d">audioDevice</link>&#32;=&#32;settings[<emphasis role="stringliteral">&quot;audioDevice&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1aa893cf0e18009ba2aeb67a105d42aa71">sampleRate</link>.store(std::stoi(settings[<emphasis role="stringliteral">&quot;sampleRate&quot;</emphasis>]));&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;JACK</emphasis>
<anchor xml:id="_config_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1a561cff08db18dcd86b07826f06c99c83">quantization</link>&#32;=&#32;std::stoi(settings[<emphasis role="stringliteral">&quot;quantizationRatio&quot;</emphasis>]);
<anchor xml:id="_config_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae81381142d99bc1845cb33bd048643df">bufferSize</link>.store(std::stoi(settings[<emphasis role="stringliteral">&quot;bufferSize&quot;</emphasis>]));&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;JACK</emphasis>
<anchor xml:id="_config_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae2854185c92301b90a7775242fe6c629">numChannels</link>.store(std::stoi(settings[<emphasis role="stringliteral">&quot;numChannels&quot;</emphasis>]));
<anchor xml:id="_config_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae2854185c92301b90a7775242fe6c629">numChannels</link>.store(std::min(<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae2854185c92301b90a7775242fe6c629">numChannels</link>.load(),2u));&#32;<emphasis role="comment">//&#32;--&gt;&#32;make&#32;numChannels&#32;mono&#32;or&#32;stereo&#32;and&#32;discard&#32;greater&#32;values</emphasis>
<anchor xml:id="_config_8cpp_source_1l00018"/>00018 
<anchor xml:id="_config_8cpp_source_1l00019"/>00019 
<anchor xml:id="_config_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;camera&#32;configuration</emphasis>
<anchor xml:id="_config_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1aec8bc46dada3293af2cfa3339887bc34">device</link>&#32;=&#32;settings[<emphasis role="stringliteral">&quot;cameraDevice&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;camRes&#32;=&#32;settings[<emphasis role="stringliteral">&quot;cameraResolution&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;temp&#32;=&#32;camRes.substr(0,&#32;camRes.find(<emphasis role="charliteral">&apos;x&apos;</emphasis>));&#32;
<anchor xml:id="_config_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>.store(std::stoi(temp));&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;OPENCV</emphasis>
<anchor xml:id="_config_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a5aacf3ba605a2c6bfa6a88b971557fa2">camResH</link>.store(std::stoi(camRes.substr(temp.length()&#32;+&#32;1)));&#32;&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;OPENCV</emphasis>
<anchor xml:id="_config_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a941b878bdf22ecbced58522a314bd971">frameRate</link>.store(std::stod(settings[<emphasis role="stringliteral">&quot;cameraFrameRate&quot;</emphasis>]));
<anchor xml:id="_config_8cpp_source_1l00027"/>00027 
<anchor xml:id="_config_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;screen&#32;configuration</emphasis>
<anchor xml:id="_config_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;screenRes&#32;=&#32;settings[<emphasis role="stringliteral">&quot;displayResolution&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;screenRes.substr(0,&#32;screenRes.find(<emphasis role="charliteral">&apos;x&apos;</emphasis>));
<anchor xml:id="_config_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1a633402e1095e221e678ce55fee7f3f9e">dispResW</link>.store(std::stoi(temp));&#32;&#32;&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;OPENCV</emphasis>
<anchor xml:id="_config_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1ae781f975c0fac0c92d0f1802468ee578">dispResH</link>.store(std::stoi(screenRes.substr(temp.length()&#32;+&#32;1)));&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--&gt;&#32;WILL&#32;BE&#32;ADJUSTED&#32;BY&#32;OPENCV</emphasis>
<anchor xml:id="_config_8cpp_source_1l00033"/>00033 
<anchor xml:id="_config_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;iav&#32;configuration&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1aefdc15d97fa0d2e067d5efcfda0f4947">fps</link>.store(std::stod(settings[<emphasis role="stringliteral">&quot;cameraFrameRate&quot;</emphasis>]));
<anchor xml:id="_config_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;frequencyRange&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Narrow&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_config_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ad171cfdbc06a2403eb3dad6636a59cf0">minFrequency</link>&#32;=&#32;300;
<anchor xml:id="_config_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a00eb72c5d6c59eb3d3308bdb1d337a10">maxFrequency</link>&#32;=&#32;700;
<anchor xml:id="_config_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;frequencyRange&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Normal&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_config_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ad171cfdbc06a2403eb3dad6636a59cf0">minFrequency</link>&#32;=&#32;300;
<anchor xml:id="_config_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a00eb72c5d6c59eb3d3308bdb1d337a10">maxFrequency</link>&#32;=&#32;1500;
<anchor xml:id="_config_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;frequencyRange&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Wide&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_config_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ad171cfdbc06a2403eb3dad6636a59cf0">minFrequency</link>&#32;=&#32;100;
<anchor xml:id="_config_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a00eb72c5d6c59eb3d3308bdb1d337a10">maxFrequency</link>&#32;=&#32;3000;
<anchor xml:id="_config_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="_config_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_config_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;roi&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Small&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ab61ab68c3f8855d2b5b71c8ffcf9844e">roiRadius</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(0.05&#32;*&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>);
<anchor xml:id="_config_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;roi&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Medium&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ab61ab68c3f8855d2b5b71c8ffcf9844e">roiRadius</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(0.1&#32;*&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>);
<anchor xml:id="_config_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings[<emphasis role="stringliteral">&quot;roi&quot;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&quot;Large&quot;</emphasis>)
<anchor xml:id="_config_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ab61ab68c3f8855d2b5b71c8ffcf9844e">roiRadius</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(0.15&#32;*&#32;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>);
<anchor xml:id="_config_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a8edbd681463f6d01bc579a4b5e1d9b5b">trigger</link>&#32;=&#32;settings[<emphasis role="stringliteral">&quot;trigger&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a429208ba4ff9c592ec985055adeef13e">trackingAlg</link>&#32;=&#32;settings[<emphasis role="stringliteral">&quot;trackingAlgorithm&quot;</emphasis>];
<anchor xml:id="_config_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;iavconf.skipFramesRatio&#32;=&#32;std::stoi(settings[&quot;skipFramesRatio&quot;]);</emphasis>
<anchor xml:id="_config_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;defining&#32;skipFramesRatio,&#32;fps/skipFramesRatio&#32;should&#32;deduce&#32;the&#32;final&#32;value&#32;of&#32;frameRate&#32;and&#32;fps&#32;variables.</emphasis>
<anchor xml:id="_config_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(runAtomicityCheck()){
<anchor xml:id="_config_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&lt;&lt;<emphasis role="stringliteral">&quot;WARNING:&#32;Atomicity&#32;is&#32;not&#32;supported&#32;on&#32;this&#32;platform&#32;for&#32;some&#32;types&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00066"/>00066 }
<anchor xml:id="_config_8cpp_source_1l00067"/>00067 
<anchor xml:id="_config_8cpp_source_1l00068"/><link linkend="_classConfig_1a975933ecde91dc436d4ca39464cfd25f">00068</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classConfig_1a975933ecde91dc436d4ca39464cfd25f">Config::display</link>(){
<anchor xml:id="_config_8cpp_source_1l00069"/>00069 
<anchor xml:id="_config_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;##########&#32;Interactive&#32;Audio&#32;Visualizer&#32;Config&#32;##########\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;------------------&#32;audio&#32;settings&#32;-----------------------\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;audio&#32;device&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1a9f06f009be657b8e4197808c765ee56d">audioDevice</link>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;sampling&#32;rate&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1aa893cf0e18009ba2aeb67a105d42aa71">sampleRate</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;samples/sec&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;quantization&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1a561cff08db18dcd86b07826f06c99c83">quantization</link>&lt;&lt;<emphasis role="stringliteral">&quot;&#32;bits&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;buffer&#32;size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae81381142d99bc1845cb33bd048643df">bufferSize</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;samples&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;num&#32;output&#32;channels&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a9f58fb425653b02d94a2961f7bdd9e45">audconf</link>.<link linkend="_structAudioConfig_1ae2854185c92301b90a7775242fe6c629">numChannels</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;-----------------&#32;display&#32;settings&#32;----------------------\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;frames&#32;per&#32;second&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1aefdc15d97fa0d2e067d5efcfda0f4947">fps</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;fps&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;display&#32;Width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1a633402e1095e221e678ce55fee7f3f9e">dispResW</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;pixels&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;display&#32;Height&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ab6692268f819ce3f8474d1d791f3aaee">dispconf</link>.<link linkend="_structDisplayConfig_1ae781f975c0fac0c92d0f1802468ee578">dispResH</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;pixels&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;------------------&#32;camera&#32;settings&#32;----------------------\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;camera&#32;device&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1aec8bc46dada3293af2cfa3339887bc34">device</link>&lt;&lt;std::endl;&#32;
<anchor xml:id="_config_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;camera&#32;resolution&#32;width&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;pixels&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;camera&#32;resolution&#32;height&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a5aacf3ba605a2c6bfa6a88b971557fa2">camResH</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;pixels&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;camera&#32;frame&#32;rate&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a941b878bdf22ecbced58522a314bd971">frameRate</link>.load()&lt;&lt;<emphasis role="stringliteral">&quot;&#32;fps&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;------------------&#32;iav&#32;Settings&#32;-------------------------\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;mininum&#32;frequency&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ad171cfdbc06a2403eb3dad6636a59cf0">minFrequency</link>&lt;&lt;<emphasis role="stringliteral">&quot;&#32;Hz&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;maxinum&#32;frequency&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a00eb72c5d6c59eb3d3308bdb1d337a10">maxFrequency</link>&lt;&lt;<emphasis role="stringliteral">&quot;&#32;Hz&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;radius&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ab61ab68c3f8855d2b5b71c8ffcf9844e">roiRadius</link>&lt;&lt;<emphasis role="stringliteral">&quot;&#32;pixels&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;trigger&#32;method&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a8edbd681463f6d01bc579a4b5e1d9b5b">trigger</link>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;tracking&#32;algorithm&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;</emphasis>&lt;&lt;<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a429208ba4ff9c592ec985055adeef13e">trackingAlg</link>&lt;&lt;std::endl;
<anchor xml:id="_config_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&lt;&lt;&quot;skip&#32;frames&#32;ratio&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\t:\t&quot;&lt;&lt;iavconf.skipFramesRatio&lt;&lt;std::endl;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&lt;&lt;&quot;number&#32;of&#32;skip&#32;frames&#32;&#32;&#32;&#32;&#32;\t:\t&quot;&lt;&lt;iavconf.skipFramesRatio-1&lt;&lt;&quot;&#32;frames&quot;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="_config_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;#########################################################\n\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00095"/>00095 
<anchor xml:id="_config_8cpp_source_1l00096"/>00096 }
<anchor xml:id="_config_8cpp_source_1l00097"/>00097 
<anchor xml:id="_config_8cpp_source_1l00098"/>00098 <emphasis role="keywordtype">bool</emphasis>&#32;Config::runAtomicityCheck()&#32;{
<anchor xml:id="_config_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;
<anchor xml:id="_config_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;warning&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;
<anchor xml:id="_config_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;atomic&#32;lock&#32;freedom&#32;for&#32;each&#32;atomic&#32;member&#32;in&#32;ConfigStruct</emphasis>
<anchor xml:id="_config_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!std::atomic&lt;int&gt;::is_always_lock_free)&#32;{
<anchor xml:id="_config_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Warning:&#32;atomic&lt;int&gt;&#32;is&#32;not&#32;lock-free!\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00107"/>00107 
<anchor xml:id="_config_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!std::atomic&lt;unsigned&#32;int&gt;::is_always_lock_free)&#32;{
<anchor xml:id="_config_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Warning:&#32;atomic&lt;unsigned&#32;int&gt;&#32;is&#32;not&#32;lock-free!\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00112"/>00112 
<anchor xml:id="_config_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!std::atomic&lt;double&gt;::is_always_lock_free)&#32;{
<anchor xml:id="_config_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Warning:&#32;atomic&lt;double&gt;&#32;is&#32;not&#32;lock-free!\n&quot;</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_config_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="_config_8cpp_source_1l00117"/>00117 
<anchor xml:id="_config_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;warning;
<anchor xml:id="_config_8cpp_source_1l00119"/>00119 }
<anchor xml:id="_config_8cpp_source_1l00120"/>00120 
</programlisting></section>
