<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_screenhw_8cpp_source" xml:lang="en-US">
<title>screenhw.cpp</title>
<indexterm><primary>src/gui/screenhw.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_screenhw_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;unordered_set&gt;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;X11/Xlib.h&gt;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;X11/extensions/Xrandr.h&gt;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_screenhw_8h">gui/screenhw.h</link>&quot;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00007"/>00007 
<anchor xml:id="_screenhw_8cpp_source_1l00008"/>00008 
<anchor xml:id="_screenhw_8cpp_source_1l00009"/>00009 
<anchor xml:id="_screenhw_8cpp_source_1l00010"/><link linkend="_screenhw_8cpp_1a0fab6e35135db44188b8fd3c9e4b9a5a">00010</link> std::vector&lt;std::pair&lt;int,int&gt;&gt;&#32;<link linkend="_screenhw_8cpp_1a0fab6e35135db44188b8fd3c9e4b9a5a">get_screen_resolution</link>()&#32;{
<anchor xml:id="_screenhw_8cpp_source_1l00011"/>00011 
<anchor xml:id="_screenhw_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;std::vector&lt;std::pair&lt;int,int&gt;&gt;&#32;screen_resolutions;
<anchor xml:id="_screenhw_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;std::unordered_set&lt;std::string&gt;&#32;uniquesValues;
<anchor xml:id="_screenhw_8cpp_source_1l00014"/>00014 
<anchor xml:id="_screenhw_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;Display*&#32;display&#32;=&#32;XOpenDisplay(NULL);
<anchor xml:id="_screenhw_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!display)&#32;{
<anchor xml:id="_screenhw_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error:&#32;Couldn&apos;t&#32;open&#32;display.&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_screenhw_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{};
<anchor xml:id="_screenhw_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;}
<anchor xml:id="_screenhw_8cpp_source_1l00020"/>00020 
<anchor xml:id="_screenhw_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;screen&#32;=&#32;DefaultScreen(display);
<anchor xml:id="_screenhw_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;Window&#32;root&#32;=&#32;RootWindow(display,&#32;screen);
<anchor xml:id="_screenhw_8cpp_source_1l00023"/>00023 
<anchor xml:id="_screenhw_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;XRRScreenResources*&#32;resources&#32;=&#32;XRRGetScreenResourcesCurrent(display,&#32;root);
<anchor xml:id="_screenhw_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!resources)&#32;{
<anchor xml:id="_screenhw_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error:&#32;Could&#32;not&#32;get&#32;screen&#32;resources.&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_screenhw_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCloseDisplay(display);
<anchor xml:id="_screenhw_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{};
<anchor xml:id="_screenhw_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="_screenhw_8cpp_source_1l00030"/>00030 
<anchor xml:id="_screenhw_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;&quot;Available&#32;Screen&#32;Resolutions:&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00032"/>00032 
<anchor xml:id="_screenhw_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterate&#32;through&#32;all&#32;modes&#32;and&#32;display&#32;valid&#32;resolutions</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;resources-&gt;nmode;&#32;++i)&#32;{
<anchor xml:id="_screenhw_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XRRModeInfo*&#32;mode&#32;=&#32;&amp;resources-&gt;modes[i];
<anchor xml:id="_screenhw_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode-&gt;width&#32;&gt;&#32;0&#32;&amp;&amp;&#32;mode-&gt;height&#32;&gt;&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;Ensure&#32;valid&#32;dimensions</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;mode-&gt;width&#32;&lt;&lt;&#32;&quot;x&quot;&#32;&lt;&lt;&#32;mode-&gt;height&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_screenhw_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;resVal&#32;=&#32;std::to_string(mode-&gt;width)&#32;+<emphasis role="stringliteral">&quot;x&quot;</emphasis>+&#32;std::to_string(mode-&gt;height);
<anchor xml:id="_screenhw_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(uniquesValues.find(resVal)==&#32;uniquesValues.end()){
<anchor xml:id="_screenhw_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;screen_resolutions.push_back({mode-&gt;width,&#32;mode-&gt;height});
<anchor xml:id="_screenhw_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uniquesValues.insert(resVal);
<anchor xml:id="_screenhw_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_screenhw_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_screenhw_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="_screenhw_8cpp_source_1l00045"/>00045 
<anchor xml:id="_screenhw_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;XRRFreeScreenResources(resources);
<anchor xml:id="_screenhw_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;XCloseDisplay(display);
<anchor xml:id="_screenhw_8cpp_source_1l00048"/>00048 
<anchor xml:id="_screenhw_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;screen_resolutions;
<anchor xml:id="_screenhw_8cpp_source_1l00050"/>00050 }
</programlisting></section>
