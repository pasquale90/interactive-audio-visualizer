<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_gui_8cpp_source" xml:lang="en-US">
<title>gui.cpp</title>
<indexterm><primary>src/gui.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_gui_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;cstddef&gt;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gui_8h">gui.h</link>&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_opencvfps_8h">gui/opencvfps.h</link>&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_audiohw_8h">gui/audiohw.h</link>&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_camerahw_8h">gui/camerahw.h</link>&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_screenhw_8h">gui/screenhw.h</link>&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00008"/>00008 
<anchor xml:id="_gui_8cpp_source_1l00009"/>00009 <emphasis role="keywordtype">void</emphasis>&#32;GUI::initializeComponents(){
<anchor xml:id="_gui_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;deviceComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;sampleRateComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;cameraDeviceComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;resolutionComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;bufferSizeComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;quantizationComboBox&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;frameRateComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;displayResolutionComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;displayFrameRateComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;frequencyRangeComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;roiComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;triggerComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;trackingAlgorithmComboBox=&#32;<emphasis role="keyword">new</emphasis>&#32;QComboBox();
<anchor xml:id="_gui_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;skipFramesSlider&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QSlider(Qt::Horizontal);&#32;&#32;<emphasis role="comment">//&#32;Horizontal&#32;slider</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;audioDeviceLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Device:&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;sampleRateLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Sample&#32;Rate:&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;cameraDeviceLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Device:&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;cameraResolutionLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Resolution:&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;bufferSizeLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Buffer&#32;Size&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;quantizationLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Quantization&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;numOutputChannelsLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Output&#32;channels&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;numOutputChannelsValue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel();
<anchor xml:id="_gui_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;cameraFrameRateLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Frame&#32;Rate&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;screenResolutionLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Resolution&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;screenFrameRateLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Frames&#32;per&#32;second&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;iavFrequencyRangeLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Frequency&#32;range&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;iavRegionOfInterestLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;ROI&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;iavTriggerLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Trigger&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;iavTrackingAlgLabel=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Tracking&#32;algorithm&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;accuracyLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Accuracy&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;cpuLoadLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel(<emphasis role="stringliteral">&quot;Economy&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00043"/>00043 
<anchor xml:id="_gui_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;audioDeviceLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Choose&#32;audio&#32;output&#32;device.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;sampleRateLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Set&#32;samples&#32;per&#32;second.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;cameraDeviceLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Select&#32;camera&#32;input&#32;device.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;cameraResolutionLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Set&#32;camera&#32;capture&#32;resolution.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;bufferSizeLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Configure&#32;audio&#32;buffer&#32;size.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;quantizationLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Quantization&#32;range&#32;for&#32;digitalizing&#32;audio&#32;data&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;numOutputChannelsLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Number&#32;of&#32;output&#32;channels&#32;(&gt;2&#32;is&#32;Stereo)&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;cameraFrameRateLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Set&#32;camera&#32;frame&#32;rate&#32;(currently&#32;fixed).&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;screenResolutionLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Select&#32;screen&#32;resolution.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;screenFrameRateLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Set&#32;screen&#32;frame&#32;rate&#32;(currently&#32;fixed).&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;iavFrequencyRangeLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Define&#32;audio&#32;frequency&#32;range&#32;for&#32;sound&#32;generation&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;iavRegionOfInterestLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Set&#32;region&#32;of&#32;interest&#32;size&#32;(window&#32;size&#32;for&#32;photshooting&#32;pattern).&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;iavTriggerLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Choose&#32;capturing&#32;method.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;iavTrackingAlgLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Select&#32;object&#32;tracking&#32;algorithm.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;accuracyLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Do&#32;not&#32;skip&#32;frames.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;cpuLoadLabel-&gt;setToolTip(<emphasis role="stringliteral">&quot;Skip&#32;frames.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;skipFramesSlider-&gt;setToolTip(<emphasis role="stringliteral">&quot;CURRENTLY&#32;UNSUPPORTED&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00061"/>00061 
<anchor xml:id="_gui_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;create&#32;a&#32;layout&#32;for&#32;the&#32;#Outchannels</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;numChannelsLayout&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QHBoxLayout();
<anchor xml:id="_gui_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;numChannelsLayout-&gt;addWidget(numOutputChannelsLabel);
<anchor xml:id="_gui_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;numChannelsLayout-&gt;addWidget(numOutputChannelsValue);
<anchor xml:id="_gui_8cpp_source_1l00066"/>00066 }
<anchor xml:id="_gui_8cpp_source_1l00067"/>00067 
<anchor xml:id="_gui_8cpp_source_1l00068"/>00068 
<anchor xml:id="_gui_8cpp_source_1l00069"/>00069 <emphasis role="keywordtype">void</emphasis>&#32;GUI::addExplanations(){
<anchor xml:id="_gui_8cpp_source_1l00070"/>00070 
<anchor xml:id="_gui_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;explanation&#32;to&#32;the&#32;audio&#32;devices,</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&lt;audioExplanations.size();&#32;++i){
<anchor xml:id="_gui_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deviceComboBox-&gt;setItemData(i,&#32;QString::fromStdString(&#32;audioExplanations[i]&#32;),&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;..&#32;to&#32;the&#32;frame&#32;rates&#32;of&#32;both&#32;camera&#32;and&#32;screen,</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;approxFps&#32;=&#32;<link linkend="_opencvfps_8cpp_1a26d6d12c7c1b31e27b71aeb7a8742b6b">getCVfps_approx</link>(cameraDeviceComboBox-&gt;currentText().toStdString().c_str());
<anchor xml:id="_gui_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;frameRateComboBox-&gt;setItemData(0,&#32;<emphasis role="stringliteral">&quot;≈&quot;</emphasis>+&#32;QString::number(&#32;approxFps&#32;)+<emphasis role="stringliteral">&quot;&#32;fps&#32;detected&#32;hardware&#32;capability&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;displayFrameRateComboBox-&gt;setItemData(0,&#32;<emphasis role="stringliteral">&quot;≈&quot;</emphasis>+&#32;QString::number(&#32;approxFps&#32;)+<emphasis role="stringliteral">&quot;&#32;fps&#32;detected&#32;hardware&#32;capability&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00080"/>00080 
<anchor xml:id="_gui_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;...&#32;to&#32;the&#32;roi&#32;comboBox&#32;options,</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;roiComboBox-&gt;setItemData(0,&#32;<emphasis role="stringliteral">&quot;5%&#32;of&#32;camera&apos;s&#32;capture&#32;resolution.&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;roiComboBox-&gt;setItemData(1,&#32;<emphasis role="stringliteral">&quot;10%&#32;of&#32;camera&apos;s&#32;capture&#32;resolution.&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;roiComboBox-&gt;setItemData(2,&#32;<emphasis role="stringliteral">&quot;15%&#32;of&#32;camera&apos;s&#32;capture&#32;resolution.&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00085"/>00085 
<anchor xml:id="_gui_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;..&#32;to&#32;the&#32;capturing&#32;method,</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;triggerComboBox-&gt;setItemData(0,&#32;&quot;Capturing&#32;is&#32;initialized&#32;manually,&#32;using&#32;the&#32;Space&#32;Bar&#32;key&quot;,&#32;Qt::ToolTipRole);</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;triggerComboBox-&gt;setItemData(1,&#32;<emphasis role="stringliteral">&quot;A&#32;5-seconds&#32;timer&#32;will&#32;initialize&#32;the&#32;capturing&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00089"/>00089 
<anchor xml:id="_gui_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;..&#32;to&#32;the&#32;frequency&#32;ranges</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;frequencyRangeComboBox-&gt;setItemData(0,&#32;<emphasis role="stringliteral">&quot;300&#32;Hz&#32;up&#32;to&#32;700&#32;Hz&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;frequencyRangeComboBox-&gt;setItemData(1,&#32;<emphasis role="stringliteral">&quot;300&#32;Hz&#32;up&#32;to&#32;1500&#32;Hz&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;frequencyRangeComboBox-&gt;setItemData(2,&#32;<emphasis role="stringliteral">&quot;100&#32;Hz&#32;up&#32;to&#32;20&#32;kHz&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00094"/>00094 
<anchor xml:id="_gui_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;..&#32;and&#32;finally&#32;to&#32;the&#32;tracking&#32;algorithms</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;trackingAlgorithmComboBox-&gt;setItemData(0,&#32;<emphasis role="stringliteral">&quot;Recommended&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;trackingAlgorithmComboBox-&gt;setItemData(1,&#32;<emphasis role="stringliteral">&quot;Not&#32;recommended&quot;</emphasis>,&#32;Qt::ToolTipRole);
<anchor xml:id="_gui_8cpp_source_1l00098"/>00098 
<anchor xml:id="_gui_8cpp_source_1l00099"/>00099 }
<anchor xml:id="_gui_8cpp_source_1l00100"/>00100 
<anchor xml:id="_gui_8cpp_source_1l00101"/><link linkend="_classGUI_1a8cbb3140b7d3c9d8e942d6ce6b60a0e8">00101</link> <link linkend="_classGUI_1a8cbb3140b7d3c9d8e942d6ce6b60a0e8">GUI::GUI</link>()&#32;{&#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc&#32;=&#32;0;
<anchor xml:id="_gui_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;applicationStart&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_gui_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;QApplication&#32;app(argc,<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00106"/>00106 
<anchor xml:id="_gui_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;QWidget&#32;window;
<anchor xml:id="_gui_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;window.setWindowTitle(<emphasis role="stringliteral">&quot;Interactive&#32;Audio&#32;Visualizer&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;QVBoxLayout&#32;mainLayout;
<anchor xml:id="_gui_8cpp_source_1l00111"/>00111 
<anchor xml:id="_gui_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;initializeComponents();
<anchor xml:id="_gui_8cpp_source_1l00113"/>00113 
<anchor xml:id="_gui_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;initializeTexts();
<anchor xml:id="_gui_8cpp_source_1l00115"/>00115 
<anchor xml:id="_gui_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Audio&#32;Settings</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;QGroupBox&#32;audioSettings(<emphasis role="stringliteral">&quot;Audio&#32;Settings&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;QVBoxLayout&#32;audioLayout;
<anchor xml:id="_gui_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;deviceComboBox-&gt;addItems(audioDevices);
<anchor xml:id="_gui_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;audioLayout.addWidget(audioDeviceLabel);
<anchor xml:id="_gui_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;audioLayout.addWidget(deviceComboBox);
<anchor xml:id="_gui_8cpp_source_1l00122"/>00122 
<anchor xml:id="_gui_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sample&#32;Rate&#32;ComboBox</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;updateSampleRates(deviceComboBox-&gt;currentText());
<anchor xml:id="_gui_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;audioLayout.addWidget(sampleRateLabel);
<anchor xml:id="_gui_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;audioLayout.addWidget(sampleRateComboBox);
<anchor xml:id="_gui_8cpp_source_1l00127"/>00127 
<anchor xml:id="_gui_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;QObject::connect(deviceComboBox,&#32;&amp;QComboBox::currentTextChanged,&#32;
<anchor xml:id="_gui_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;[<emphasis role="keyword">this</emphasis>](<emphasis role="keyword">const</emphasis>&#32;QString&#32;&amp;text){
<anchor xml:id="_gui_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateSampleRates(text);
<anchor xml:id="_gui_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateNumChannelsInfo(text);
<anchor xml:id="_gui_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;});
<anchor xml:id="_gui_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;audioLayout.addWidget(createDropDownList(bufferSizeComboBox,bufferSizeLabel,&#32;{<emphasis role="stringliteral">&quot;32&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;64&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;128&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;256&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;512&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;1024&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;2048&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;4096&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;audioLayout.addWidget(createDropDownList(quantizationComboBox,quantizationLabel,&#32;{QString::number(&#32;<link linkend="_namespaceAudioHardware_1abd0d01ecfb85ee51cdc1c04fb15d39c5">AudioHardware::quantizationRatio</link>&#32;)}&#32;));
<anchor xml:id="_gui_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;audioLayout.addLayout(numChannelsLayout);
<anchor xml:id="_gui_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;audioSettings.setLayout(&amp;audioLayout);
<anchor xml:id="_gui_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;mainLayout.addWidget(&amp;audioSettings);
<anchor xml:id="_gui_8cpp_source_1l00139"/>00139 
<anchor xml:id="_gui_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;Settings</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;QGroupBox&#32;cameraSettings(<emphasis role="stringliteral">&quot;Camera&#32;Settings&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;QVBoxLayout&#32;cameraLayout;
<anchor xml:id="_gui_8cpp_source_1l00143"/>00143 
<anchor xml:id="_gui_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Camera&#32;Device&#32;ComboBox</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;cameraDeviceComboBox-&gt;addItems(cameraDevices);
<anchor xml:id="_gui_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;cameraLayout.addWidget(cameraDeviceLabel);
<anchor xml:id="_gui_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;cameraLayout.addWidget(cameraDeviceComboBox);
<anchor xml:id="_gui_8cpp_source_1l00148"/>00148 
<anchor xml:id="_gui_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Resolution&#32;ComboBox</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;updateResolution(cameraDeviceComboBox-&gt;currentText());
<anchor xml:id="_gui_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;cameraLayout.addWidget(cameraResolutionLabel);
<anchor xml:id="_gui_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;cameraLayout.addWidget(resolutionComboBox);
<anchor xml:id="_gui_8cpp_source_1l00153"/>00153 
<anchor xml:id="_gui_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;QObject::connect(cameraDeviceComboBox,&#32;&amp;QComboBox::currentTextChanged,&#32;
<anchor xml:id="_gui_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="keyword">this</emphasis>](<emphasis role="keyword">const</emphasis>&#32;QString&#32;&amp;text){
<anchor xml:id="_gui_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateResolution(text);
<anchor xml:id="_gui_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_gui_8cpp_source_1l00158"/>00158 
<anchor xml:id="_gui_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;cameraLayout.addWidget(createDropDownList(frameRateComboBox,cameraFrameRateLabel,&#32;{<emphasis role="stringliteral">&quot;Auto&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;cameraSettings.setLayout(&amp;cameraLayout);
<anchor xml:id="_gui_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;mainLayout.addWidget(&amp;cameraSettings);
<anchor xml:id="_gui_8cpp_source_1l00162"/>00162 
<anchor xml:id="_gui_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Display&#32;Settings</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;QGroupBox&#32;displaySettings(<emphasis role="stringliteral">&quot;Display&#32;Settings&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;QVBoxLayout&#32;displayLayout;
<anchor xml:id="_gui_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;displayLayout.addWidget(createDropDownList(displayResolutionComboBox,screenResolutionLabel,&#32;displayResolutions));
<anchor xml:id="_gui_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;displayLayout.addWidget(createDropDownList(displayFrameRateComboBox,screenFrameRateLabel,&#32;{<emphasis role="stringliteral">&quot;Auto&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;displaySettings.setLayout(&amp;displayLayout);
<anchor xml:id="_gui_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;mainLayout.addWidget(&amp;displaySettings);
<anchor xml:id="_gui_8cpp_source_1l00170"/>00170 
<anchor xml:id="_gui_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IAV&#32;Settings</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;QGroupBox&#32;iavSettings(<emphasis role="stringliteral">&quot;IAV&#32;Settings&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;QVBoxLayout&#32;iavLayout;
<anchor xml:id="_gui_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;iavLayout.addWidget(createDropDownList(frequencyRangeComboBox,iavFrequencyRangeLabel,&#32;{<emphasis role="stringliteral">&quot;Narrow&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Normal&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Wide&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;iavLayout.addWidget(createDropDownList(roiComboBox,iavRegionOfInterestLabel,&#32;{<emphasis role="stringliteral">&quot;Small&quot;</emphasis>,<emphasis role="stringliteral">&quot;Medium&quot;</emphasis>,<emphasis role="stringliteral">&quot;Large&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;iavLayout.addWidget(createDropDownList(triggerComboBox,iavTriggerLabel,&#32;{<emphasis role="stringliteral">&quot;Auto&quot;</emphasis>}));&#32;<emphasis role="comment">//&quot;Manual&quot;,</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;iavLayout.addWidget(createDropDownList(trackingAlgorithmComboBox,iavTrackingAlgLabel,&#32;{<emphasis role="stringliteral">&quot;CSRT&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;KCF&quot;</emphasis>}));
<anchor xml:id="_gui_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;iavLayout.addWidget(createSkipFramesSlider(accuracyLabel,&#32;cpuLoadLabel));
<anchor xml:id="_gui_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;iavSettings.setLayout(&amp;iavLayout);
<anchor xml:id="_gui_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;mainLayout.addWidget(&amp;iavSettings);
<anchor xml:id="_gui_8cpp_source_1l00181"/>00181 
<anchor xml:id="_gui_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;addExplanations();
<anchor xml:id="_gui_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;errorLabel</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;errorLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QLabel();
<anchor xml:id="_gui_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;errorLabel-&gt;setStyleSheet(<emphasis role="stringliteral">&quot;color:&#32;red;&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;errorLabel-&gt;setText(<emphasis role="stringliteral">&quot;Camera&#32;resolution&#32;cannot&#32;exceed&#32;display&#32;resolution.&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;errorLabel-&gt;hide();&#32;<emphasis role="comment">//&#32;Initially&#32;hidden</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;mainLayout.addWidget(errorLabel);
<anchor xml:id="_gui_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;QPushButton&#32;startButton(<emphasis role="stringliteral">&quot;Start&quot;</emphasis>);
<anchor xml:id="_gui_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QObject::connect(&amp;startButton,&#32;&amp;QPushButton::clicked,&#32;[<emphasis role="keyword">this</emphasis>]()&#32;{
<anchor xml:id="_gui_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(checkResolutionCompatibility())&#32;{
<anchor xml:id="_gui_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorLabel-&gt;hide();&#32;<emphasis role="comment">//&#32;Hide&#32;if&#32;resolutions&#32;are&#32;compatible</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;saveCurrentStates();
<anchor xml:id="_gui_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;applicationStart&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_gui_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QApplication::quit();
<anchor xml:id="_gui_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;exiting&#32;to&#32;start_iav();</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gui_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorLabel-&gt;show();&#32;<emphasis role="comment">//&#32;Show&#32;error&#32;message&#32;if&#32;not&#32;compatible</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="_gui_8cpp_source_1l00203"/>00203 
<anchor xml:id="_gui_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;mainLayout.addWidget(&amp;startButton);
<anchor xml:id="_gui_8cpp_source_1l00205"/>00205 
<anchor xml:id="_gui_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;loadCurrentStates();
<anchor xml:id="_gui_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;window.setLayout(&amp;mainLayout);
<anchor xml:id="_gui_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;window.show();
<anchor xml:id="_gui_8cpp_source_1l00210"/>00210 
<anchor xml:id="_gui_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;QApplication::exec();
<anchor xml:id="_gui_8cpp_source_1l00212"/>00212 }
<anchor xml:id="_gui_8cpp_source_1l00213"/>00213 
<anchor xml:id="_gui_8cpp_source_1l00214"/>00214 <emphasis role="keywordtype">void</emphasis>&#32;GUI::initializeTexts(){
<anchor xml:id="_gui_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;audio&#32;devices&#32;and&#32;sample&#32;rates&#32;supported</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;std::vector&lt;AudioHardware::Info&gt;&#32;audio_hw_info;
<anchor xml:id="_gui_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<link linkend="_namespaceAudioHardware_1a906e6749cef4efdd304dbc28530159c6">get_audio_hardware_info</link>(audio_hw_info);
<anchor xml:id="_gui_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;[info,sr,nChannels]:audio_hw_info){
<anchor xml:id="_gui_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;%s&#32;:&#32;%d,&#32;%d\n&quot;,name.c_str(),&#32;sr.first,&#32;sr.second);</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QString&#32;audio_device&#32;=&#32;QString::fromStdString(info.first);
<anchor xml:id="_gui_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;audioExplanations.push_back(info.second);
<anchor xml:id="_gui_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;audioDevices.append(audio_device);
<anchor xml:id="_gui_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numChannels.append(QString::number(nChannels));
<anchor xml:id="_gui_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;srate:&#32;<link linkend="_namespaceAudioHardware_1a8bee9daf0ac390a7556c7c0d4b97fb3e">AudioHardware::supportedRates</link>){
<anchor xml:id="_gui_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(srate&#32;&gt;=&#32;sr.first&#32;&amp;&amp;&#32;srate&#32;&lt;=&#32;sr.second){
<anchor xml:id="_gui_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampleRates[audio_device].append(QString::number(srate));
<anchor xml:id="_gui_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00231"/>00231 
<anchor xml:id="_gui_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;available&#32;cameras&#32;and&#32;resolutions&#32;supported&#32;for&#32;each&#32;one&#32;of&#32;them</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;cameras&#32;=&#32;<link linkend="_camerahw_8cpp_1a3d0a95992cb94b91094a9251b01b821c">getAvailableCameras</link>();
<anchor xml:id="_gui_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;camera&#32;:&#32;cameras)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00235"/>00235 
<anchor xml:id="_gui_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QString&#32;camera_device&#32;=&#32;QString::fromStdString(camera.devicePath);
<anchor xml:id="_gui_8cpp_source_1l00237"/>00237 
<anchor xml:id="_gui_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!camera.resolutions.empty()){
<anchor xml:id="_gui_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraDevices.append(camera_device);
<anchor xml:id="_gui_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;res&#32;:&#32;camera.resolutions)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraResolutions[camera_device].append(QString::number(res.first)&#32;+&#32;<emphasis role="stringliteral">&quot;x&quot;</emphasis>&#32;+&#32;QString::number(res.second));
<anchor xml:id="_gui_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00245"/>00245 
<anchor xml:id="_gui_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;screen&#32;resolutions&#32;for&#32;the&#32;main&#32;screen</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;screen_resolutions&#32;=&#32;<link linkend="_screenhw_8cpp_1a0fab6e35135db44188b8fd3c9e4b9a5a">get_screen_resolution</link>();
<anchor xml:id="_gui_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;resolution&#32;:&#32;screen_resolutions){
<anchor xml:id="_gui_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayResolutions.append(QString::number(resolution.first)&#32;+&#32;<emphasis role="stringliteral">&quot;x&quot;</emphasis>&#32;+&#32;QString::number(resolution.second));
<anchor xml:id="_gui_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00251"/>00251 
<anchor xml:id="_gui_8cpp_source_1l00252"/>00252 }
<anchor xml:id="_gui_8cpp_source_1l00253"/>00253 
<anchor xml:id="_gui_8cpp_source_1l00254"/>00254 <emphasis role="keywordtype">void</emphasis>&#32;GUI::saveCurrentStates(){
<anchor xml:id="_gui_8cpp_source_1l00255"/>00255 
<anchor xml:id="_gui_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::string&gt;&#32;settings;
<anchor xml:id="_gui_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;audioDevice&quot;</emphasis>]&#32;=&#32;deviceComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;sampleRate&quot;</emphasis>]&#32;=&#32;sampleRateComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;cameraDevice&quot;</emphasis>]&#32;=&#32;cameraDeviceComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;cameraResolution&quot;</emphasis>]&#32;=&#32;resolutionComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;cameraFrameRate&quot;</emphasis>]&#32;=&#32;std::to_string(approxFps);
<anchor xml:id="_gui_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;bufferSize&quot;</emphasis>]&#32;=&#32;bufferSizeComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;quantization&quot;</emphasis>]&#32;=&#32;quantizationComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;numChannels&quot;</emphasis>]&#32;=&#32;numOutputChannelsValue-&gt;text().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;quantizationRatio&quot;</emphasis>]&#32;=&#32;std::to_string(<link linkend="_namespaceAudioHardware_1abd0d01ecfb85ee51cdc1c04fb15d39c5">AudioHardware::quantizationRatio</link>);
<anchor xml:id="_gui_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;frameRate&quot;</emphasis>]&#32;=&#32;frameRateComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;displayResolution&quot;</emphasis>]&#32;=&#32;displayResolutionComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;displayFrameRate&quot;</emphasis>]&#32;=&#32;displayFrameRateComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;frequencyRange&quot;</emphasis>]&#32;=&#32;frequencyRangeComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;roi&quot;</emphasis>]&#32;=&#32;roiComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;trigger&quot;</emphasis>]&#32;=&#32;triggerComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;trackingAlgorithm&quot;</emphasis>]&#32;=&#32;trackingAlgorithmComboBox-&gt;currentText().toStdString();
<anchor xml:id="_gui_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;settings[<emphasis role="stringliteral">&quot;skipFramesRatio&quot;</emphasis>]&#32;=&#32;std::to_string(skipFramesSlider-&gt;value());
<anchor xml:id="_gui_8cpp_source_1l00275"/>00275 
<anchor xml:id="_gui_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;settingsDB.<link linkend="_classSettingsDB_1abae491addee6520ecf6c00622b776521">saveSettings</link>(settings);
<anchor xml:id="_gui_8cpp_source_1l00277"/>00277 }
<anchor xml:id="_gui_8cpp_source_1l00278"/>00278 
<anchor xml:id="_gui_8cpp_source_1l00279"/>00279 <emphasis role="keywordtype">void</emphasis>&#32;GUI::loadCurrentStates(){
<anchor xml:id="_gui_8cpp_source_1l00280"/>00280 
<anchor xml:id="_gui_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;settings&#32;=&#32;settingsDB.<link linkend="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9">loadSettings</link>();
<anchor xml:id="_gui_8cpp_source_1l00282"/>00282 
<anchor xml:id="_gui_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!settings.empty()){
<anchor xml:id="_gui_8cpp_source_1l00284"/>00284 
<anchor xml:id="_gui_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(audioDevices.contains(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;audioDevice&quot;</emphasis>]))){
<anchor xml:id="_gui_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deviceComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;audioDevice&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sampleRates[QString::fromStdString(settings[<emphasis role="stringliteral">&quot;audioDevice&quot;</emphasis>])].contains(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;sampleRate&quot;</emphasis>]))){
<anchor xml:id="_gui_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampleRateComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;sampleRate&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cameraDevices.contains(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;cameraDevice&quot;</emphasis>]))){
<anchor xml:id="_gui_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraDeviceComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;cameraDevice&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cameraResolutions[QString::fromStdString(settings[<emphasis role="stringliteral">&quot;cameraDevice&quot;</emphasis>])].contains(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;cameraResolution&quot;</emphasis>]))){
<anchor xml:id="_gui_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resolutionComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;cameraResolution&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bufferSizeComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;bufferSize&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;numOutputChannelsValue-&gt;setText(QString::fromStdString(settings[&quot;numChannels&quot;]));</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameRateComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;frameRate&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayResolutions.contains(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;displayResolution&quot;</emphasis>]))){
<anchor xml:id="_gui_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayResolutionComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;displayResolution&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayFrameRateComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;displayFrameRate&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frequencyRangeComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;frequencyRange&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roiComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;roi&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triggerComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;trigger&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingAlgorithmComboBox-&gt;setCurrentText(QString::fromStdString(settings[<emphasis role="stringliteral">&quot;trackingAlgorithm&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipFramesSlider-&gt;setValue(std::stoi(settings[<emphasis role="stringliteral">&quot;skipFramesRatio&quot;</emphasis>]));
<anchor xml:id="_gui_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gui_8cpp_source_1l00310"/>00310 }
<anchor xml:id="_gui_8cpp_source_1l00311"/>00311 
<anchor xml:id="_gui_8cpp_source_1l00312"/>00312 <emphasis role="keywordtype">void</emphasis>&#32;GUI::updateSampleRates(<emphasis role="keyword">const</emphasis>&#32;QString&#32;&amp;audioDevice)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;sampleRateComboBox-&gt;clear();
<anchor xml:id="_gui_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;sampleRateComboBox-&gt;addItems(sampleRates[audioDevice]);
<anchor xml:id="_gui_8cpp_source_1l00315"/>00315 }
<anchor xml:id="_gui_8cpp_source_1l00316"/>00316 
<anchor xml:id="_gui_8cpp_source_1l00317"/>00317 <emphasis role="comment">//&#32;static&#32;int&#32;lala&#32;=&#32;1;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00318"/>00318 <emphasis role="keywordtype">void</emphasis>&#32;GUI::updateNumChannelsInfo(<emphasis role="keyword">const</emphasis>&#32;QString&#32;&amp;audioDevice)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;numOutputChannelsValue-&gt;setText(numChannels[audioDevices.indexOf(audioDevice)]);
<anchor xml:id="_gui_8cpp_source_1l00320"/>00320 }
<anchor xml:id="_gui_8cpp_source_1l00321"/>00321 
<anchor xml:id="_gui_8cpp_source_1l00322"/>00322 <emphasis role="keywordtype">void</emphasis>&#32;GUI::updateResolution(<emphasis role="keyword">const</emphasis>&#32;QString&#32;&amp;cameraDevice)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;resolutionComboBox-&gt;clear();
<anchor xml:id="_gui_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;resolutionComboBox-&gt;addItems(cameraResolutions[cameraDevice]);
<anchor xml:id="_gui_8cpp_source_1l00325"/>00325 }
<anchor xml:id="_gui_8cpp_source_1l00326"/>00326 
<anchor xml:id="_gui_8cpp_source_1l00327"/>00327 QWidget*&#32;GUI::createDropDownList(QComboBox&#32;*comboBox,QLabel&#32;*label,<emphasis role="keyword">const</emphasis>&#32;QStringList&amp;&#32;comboBoxItems)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;
<anchor xml:id="_gui_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;*rowLayout&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QHBoxLayout;
<anchor xml:id="_gui_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;comboBox-&gt;addItems(comboBoxItems);
<anchor xml:id="_gui_8cpp_source_1l00331"/>00331 
<anchor xml:id="_gui_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;rowLayout-&gt;addWidget(label);
<anchor xml:id="_gui_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;rowLayout-&gt;addWidget(comboBox);
<anchor xml:id="_gui_8cpp_source_1l00334"/>00334 
<anchor xml:id="_gui_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;*rowWidget&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QWidget;
<anchor xml:id="_gui_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;rowWidget-&gt;setLayout(rowLayout);
<anchor xml:id="_gui_8cpp_source_1l00337"/>00337 
<anchor xml:id="_gui_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rowWidget;
<anchor xml:id="_gui_8cpp_source_1l00339"/>00339 }
<anchor xml:id="_gui_8cpp_source_1l00340"/>00340 
<anchor xml:id="_gui_8cpp_source_1l00341"/>00341 QWidget*&#32;GUI::createSkipFramesSlider(QLabel&#32;*label1,&#32;QLabel&#32;*label2)&#32;{
<anchor xml:id="_gui_8cpp_source_1l00342"/>00342 
<anchor xml:id="_gui_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;skipFramesSlider-&gt;setMinimum(1);&#32;
<anchor xml:id="_gui_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;skipFramesSlider-&gt;setMaximum(5);
<anchor xml:id="_gui_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;skipFramesSlider-&gt;setValue(0);&#32;
<anchor xml:id="_gui_8cpp_source_1l00346"/>00346 
<anchor xml:id="_gui_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;QWidget*&#32;sliderWidget&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QWidget();
<anchor xml:id="_gui_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;QHBoxLayout*&#32;layout&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;QHBoxLayout(sliderWidget);
<anchor xml:id="_gui_8cpp_source_1l00349"/>00349 
<anchor xml:id="_gui_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;layout-&gt;addWidget(label1,&#32;0,&#32;Qt::AlignLeft);
<anchor xml:id="_gui_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;layout-&gt;addWidget(skipFramesSlider);
<anchor xml:id="_gui_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;layout-&gt;addWidget(label2,&#32;0,&#32;Qt::AlignRight);
<anchor xml:id="_gui_8cpp_source_1l00353"/>00353 
<anchor xml:id="_gui_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;optional&#32;..&#32;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;connect(skipFramesSlider,&#32;&amp;QSlider::valueChanged,&#32;this,&#32;&amp;Gui::onSliderValueChanged);</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00356"/>00356 
<anchor xml:id="_gui_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;sliderWidget-&gt;setLayout(layout);&#32;&#32;<emphasis role="comment">//&#32;Set&#32;the&#32;layout&#32;to&#32;the&#32;container&#32;widget</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sliderWidget;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;widget&#32;containing&#32;the&#32;slider&#32;and&#32;labels</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00359"/>00359 }
<anchor xml:id="_gui_8cpp_source_1l00360"/>00360 
<anchor xml:id="_gui_8cpp_source_1l00361"/>00361 <emphasis role="keywordtype">bool</emphasis>&#32;GUI::checkResolutionCompatibility()&#32;{
<anchor xml:id="_gui_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Resolutions&#32;are&#32;currently&#32;stored&#32;as&#32;&quot;WidthxHeight&quot;</emphasis>
<anchor xml:id="_gui_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;QString&#32;cameraRes&#32;=&#32;resolutionComboBox-&gt;currentText();
<anchor xml:id="_gui_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;QString&#32;displayRes&#32;=&#32;displayResolutionComboBox-&gt;currentText();
<anchor xml:id="_gui_8cpp_source_1l00365"/>00365 
<anchor xml:id="_gui_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cameraWidth&#32;=&#32;cameraRes.split(<emphasis role="stringliteral">&quot;x&quot;</emphasis>)[0].toInt();
<anchor xml:id="_gui_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cameraHeight&#32;=&#32;cameraRes.split(<emphasis role="stringliteral">&quot;x&quot;</emphasis>)[1].toInt();
<anchor xml:id="_gui_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;displayWidth&#32;=&#32;displayRes.split(<emphasis role="stringliteral">&quot;x&quot;</emphasis>)[0].toInt();
<anchor xml:id="_gui_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;displayHeight&#32;=&#32;displayRes.split(<emphasis role="stringliteral">&quot;x&quot;</emphasis>)[1].toInt();
<anchor xml:id="_gui_8cpp_source_1l00370"/>00370 
<anchor xml:id="_gui_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cameraWidth&#32;&lt;=&#32;displayWidth&#32;&amp;&amp;&#32;cameraHeight&#32;&lt;=&#32;displayHeight);
<anchor xml:id="_gui_8cpp_source_1l00372"/>00372 }
<anchor xml:id="_gui_8cpp_source_1l00373"/>00373 
<anchor xml:id="_gui_8cpp_source_1l00374"/><link linkend="_classGUI_1a9f85de0bbf11e4ba7c9de1ab38f62433">00374</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classGUI_1a9f85de0bbf11e4ba7c9de1ab38f62433">GUI::onExit</link>(){
<anchor xml:id="_gui_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!applicationStart;
<anchor xml:id="_gui_8cpp_source_1l00376"/>00376 }
</programlisting></section>
