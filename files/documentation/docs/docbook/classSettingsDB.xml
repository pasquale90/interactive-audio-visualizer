<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classSettingsDB" xml:lang="en-US">
<title>SettingsDB Class Reference</title>
<indexterm><primary>SettingsDB</primary></indexterm>
<para>

<para>Class to manage settings using a SQLite database. </para>
 
</para>
<para>
<computeroutput>#include &lt;settings.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classSettingsDB_1a747cc6447e717ecfecd306b60a98169f">SettingsDB</link> (const std::string &amp;db_path=<link linkend="_namespacePaths_1a9a34ad13812f905ddf7ef5d2e7b8df1b">Paths::databasePath</link>)</para>

<para>Constructor to initialize the database connection. </para>
</listitem>
            <listitem><para>bool <link linkend="_classSettingsDB_1abae491addee6520ecf6c00622b776521">saveSettings</link> (const std::unordered_map&lt; std::string, std::string &gt; &amp;settings)</para>

<para>Function to save the given settings to the database. </para>
</listitem>
            <listitem><para>std::unordered_map&lt; std::string, std::string &gt; <link linkend="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9">loadSettings</link> ()</para>

<para>Function to load the settings from the database. </para>
</listitem>
            <listitem><para><link linkend="_classSettingsDB_1a32c5d5d956d09f1c1ba56f69ca738fe1">~SettingsDB</link> ()</para>

<para>Destructor to close the database connection and deallocate sql resources. </para>
</listitem>
            <listitem><para><link linkend="_classSettingsDB_1ad0015ca4bb6ed4e1ad4ac3f2c6977df9">SettingsDB</link> (const <link linkend="_classSettingsDB">SettingsDB</link> &amp;)=delete</para>

<para>Copy constructor is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classSettingsDB">SettingsDB</link> &amp; <link linkend="_classSettingsDB_1ad9cd05aa2c6f9e37614f7457aff401e1">operator=</link> (const <link linkend="_classSettingsDB">SettingsDB</link> &amp;)=delete</para>

<para>Copy assignment operator is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classSettingsDB_1a23b417a133b044eab85b9c11da9c231d">SettingsDB</link> (<link linkend="_classSettingsDB">SettingsDB</link> &amp;&amp;)=delete</para>

<para>Move constructor is deleted to prevent accidental use. </para>
</listitem>
            <listitem><para><link linkend="_classSettingsDB">SettingsDB</link> &amp; <link linkend="_classSettingsDB_1ad09ea87a88c73007c49058304fd7ac69">operator=</link> (<link linkend="_classSettingsDB">SettingsDB</link> &amp;&amp;)=delete</para>

<para>Move assignment operator is deleted to prevent accidental use. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Class to manage settings using a SQLite database. </para>
<para>
Definition at line <link linkend="_settings_8h_source_1l00011">11</link> of file <link linkend="_settings_8h_source">settings.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classSettingsDB_1a747cc6447e717ecfecd306b60a98169f"/><section>
    <title>SettingsDB()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<para><computeroutput>SettingsDB::SettingsDB (const std::string &amp; db_path = <computeroutput><link linkend="_namespacePaths_1a9a34ad13812f905ddf7ef5d2e7b8df1b">Paths::databasePath</link></computeroutput>
)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>

<para>Constructor to initialize the database connection. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>db_path</entry><entry>
<para>- The path to the SQLite database file. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>If the database file does not exist, it will be created. </para>
</note>
</para>
<para>
Definition at line <link linkend="_settings_8cpp_source_1l00005">5</link> of file <link linkend="_settings_8cpp_source">settings.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;dbPath(db_path)&#32;{
00006 &#32;&#32;&#32;
00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_open(dbPath.c_str(),&#32;&amp;db)&#32;!=&#32;SQLITE_OK)&#32;{
00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;db&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00010 &#32;&#32;&#32;&#32;}
00011 &#32;&#32;&#32;&#32;
00012 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;table&#32;if&#32;it&#32;doesn&apos;t&#32;exist</emphasis>
00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;createTableSQL&#32;=&#32;
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;IF&#32;NOT&#32;EXISTS&#32;settings&#32;(&quot;</emphasis>
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;setting_name&#32;TEXT&#32;PRIMARY&#32;KEY,&quot;</emphasis>
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;setting_value&#32;TEXT&#32;NOT&#32;NULL);&quot;</emphasis>;
00017 
00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;errMsg&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;createTableSQL,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(db);
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;db&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00023 &#32;&#32;&#32;&#32;}
00024 }
</programlisting></section>
<anchor xml:id="_classSettingsDB_1a32c5d5d956d09f1c1ba56f69ca738fe1"/><section>
    <title>~SettingsDB()</title>
<indexterm><primary>~SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>~SettingsDB</secondary></indexterm>
<para><computeroutput>SettingsDB::~SettingsDB ( )</computeroutput></para><para>

<para>Destructor to close the database connection and deallocate sql resources. </para>
</para>
<para>
Definition at line <link linkend="_settings_8cpp_source_1l00026">26</link> of file <link linkend="_settings_8cpp_source">settings.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(db)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(db);
00030 &#32;&#32;&#32;&#32;}
00031 &#32;&#32;&#32;&#32;
00032 }
</programlisting></section>
<anchor xml:id="_classSettingsDB_1ad0015ca4bb6ed4e1ad4ac3f2c6977df9"/><section>
    <title>SettingsDB()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<para><computeroutput>SettingsDB::SettingsDB (const <link linkend="_classSettingsDB">SettingsDB</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Copy constructor is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classSettingsDB_1a23b417a133b044eab85b9c11da9c231d"/><section>
    <title>SettingsDB()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>SettingsDB</secondary></indexterm>
<para><computeroutput>SettingsDB::SettingsDB (<link linkend="_classSettingsDB">SettingsDB</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Move constructor is deleted to prevent accidental use. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9"/><section>
    <title>loadSettings()</title>
<indexterm><primary>loadSettings</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>loadSettings</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt; std::string, std::string &gt; SettingsDB::loadSettings ( )</computeroutput></para><para>

<para>Function to load the settings from the database. </para>
</para>

<para><formalpara><title>Returns</title>

<para>std::unordered_map&lt;std::string, std::string&gt; - The loaded settings. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_settings_8cpp_source_1l00080">80</link> of file <link linkend="_settings_8cpp_source">settings.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00081 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::string&gt;&#32;settings;
00082 &#32;&#32;&#32;&#32;
00083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!db)&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
00084 
00085 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;selectSQL&#32;=&#32;<emphasis role="stringliteral">&quot;SELECT&#32;setting_name,&#32;setting_value&#32;FROM&#32;settings;&quot;</emphasis>;
00086 &#32;&#32;&#32;&#32;sqlite3_stmt*&#32;stmt;
00087 
00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_prepare_v2(db,&#32;selectSQL,&#32;-1,&#32;&amp;stmt,&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;!=&#32;SQLITE_OK)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
00090 &#32;&#32;&#32;&#32;}
00091 
00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(sqlite3_step(stmt)&#32;==&#32;SQLITE_ROW)&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;name&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(sqlite3_column_text(stmt,&#32;0));
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;value&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(sqlite3_column_text(stmt,&#32;1));
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;settings[name]&#32;=&#32;value;
00096 &#32;&#32;&#32;&#32;}
00097 
00098 &#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
00100 }
</programlisting></section>
<anchor xml:id="_classSettingsDB_1ad9cd05aa2c6f9e37614f7457aff401e1"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classSettingsDB">SettingsDB</link> &amp; SettingsDB::operator= (const <link linkend="_classSettingsDB">SettingsDB</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Copy assignment operator is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classSettingsDB_1ad09ea87a88c73007c49058304fd7ac69"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classSettingsDB">SettingsDB</link> &amp; SettingsDB::operator= (<link linkend="_classSettingsDB">SettingsDB</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Move assignment operator is deleted to prevent accidental use. </para>
</para>
</section>
<anchor xml:id="_classSettingsDB_1abae491addee6520ecf6c00622b776521"/><section>
    <title>saveSettings()</title>
<indexterm><primary>saveSettings</primary><secondary>SettingsDB</secondary></indexterm>
<indexterm><primary>SettingsDB</primary><secondary>saveSettings</secondary></indexterm>
<para><computeroutput>bool SettingsDB::saveSettings (const std::unordered_map&lt; std::string, std::string &gt; &amp; settings)</computeroutput></para><para>

<para>Function to save the given settings to the database. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>const</entry><entry>
<para>std::unordered_map&lt;std::string, std::string&gt;&amp; settings - The map of settings to be saved. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if the settings were successfully saved, false otherwise. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_settings_8cpp_source_1l00034">34</link> of file <link linkend="_settings_8cpp_source">settings.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!db)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00036 
00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Begin&#32;transaction&#32;for&#32;better&#32;performance</emphasis>
00038 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;errMsg&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;<emphasis role="stringliteral">&quot;BEGIN&#32;TRANSACTION&quot;</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00042 &#32;&#32;&#32;&#32;}
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First,&#32;clear&#32;existing&#32;settings</emphasis>
00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;clearSQL&#32;=&#32;<emphasis role="stringliteral">&quot;DELETE&#32;FROM&#32;settings;&quot;</emphasis>;
00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;clearSQL,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00049 &#32;&#32;&#32;&#32;}
00050 
00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;the&#32;insert&#32;statement</emphasis>
00052 &#32;&#32;&#32;&#32;sqlite3_stmt*&#32;stmt;
00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;insertSQL&#32;=&#32;<emphasis role="stringliteral">&quot;INSERT&#32;INTO&#32;settings&#32;(setting_name,&#32;setting_value)&#32;VALUES&#32;(?,&#32;?);&quot;</emphasis>;
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_prepare_v2(db,&#32;insertSQL,&#32;-1,&#32;&amp;stmt,&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;!=&#32;SQLITE_OK)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00056 &#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insert&#32;all&#32;settings</emphasis>
00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;[key,&#32;value]&#32;:&#32;settings)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(stmt,&#32;1,&#32;key.c_str(),&#32;-1,&#32;SQLITE_STATIC);
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(stmt,&#32;2,&#32;value.c_str(),&#32;-1,&#32;SQLITE_STATIC);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_step(stmt)&#32;!=&#32;SQLITE_DONE)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_reset(stmt);
00068 &#32;&#32;&#32;&#32;}
00069 
00070 &#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
00071 
00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;<emphasis role="stringliteral">&quot;COMMIT&quot;</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00075 &#32;&#32;&#32;&#32;}
00076 
00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00078 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/<link linkend="_settings_8h">settings.h</link>src/<link linkend="_settings_8cpp">settings.cpp</link></section>
</section>
