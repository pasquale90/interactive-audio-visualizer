<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classVideoTracker" xml:lang="en-US">
<title>VideoTracker Class Reference</title>
<indexterm><primary>VideoTracker</primary></indexterm>
<para>

<para>A class responsible for tracking objects in the camera feed. </para>
 
</para>
<para>
<computeroutput>#include &lt;videotracker.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classVideoTracker_1a8a4eb43cf75ecaec34b1b54b99d7e701">VideoTracker</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classVideoTracker_1af83065f606e3a076307a156c27f71b11">initializeTracker</link> (const cv::Mat &amp;)</para>

<para>Function to initialize the tracker with a given image. </para>
</listitem>
            <listitem><para>bool <link linkend="_classVideoTracker_1a548651167191b0d3f5e69d252e3f30da">trackObject</link> (const cv::Mat &amp;, <link linkend="_structRegionOfInterest">RegionOfInterest</link> &amp;)</para>

<para>Function to track the object in the given image. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A class responsible for tracking objects in the camera feed. </para>



<para><note><title>Note</title>

<para>This class uses OpenCV&apos;s built-in tracker API for object tracking. </para>
</note>
</para>
<para>
Definition at line <link linkend="_videotracker_8h_source_1l00012">12</link> of file <link linkend="_videotracker_8h_source">videotracker.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classVideoTracker_1a8a4eb43cf75ecaec34b1b54b99d7e701"/><section>
    <title>VideoTracker()</title>
<indexterm><primary>VideoTracker</primary><secondary>VideoTracker</secondary></indexterm>
<indexterm><primary>VideoTracker</primary><secondary>VideoTracker</secondary></indexterm>
<para><computeroutput>VideoTracker::VideoTracker ( )</computeroutput></para><para>

<para>Default constructor. </para>
</para>
<para>
Definition at line <link linkend="_videotracker_8cpp_source_1l00004">4</link> of file <link linkend="_videotracker_8cpp_source">videotracker.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00005 
00006 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;radius=cfg.<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1ab61ab68c3f8855d2b5b71c8ffcf9844e">roiRadius</link>;
00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;W=cfg.<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a53d5be43d6362ca145c56a64fe475bb9">camResW</link>.load();
00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;H=cfg.<link linkend="_classConfig_1ac0cf8c10aea198ce117dffb91206251c">camconf</link>.<link linkend="_structCameraConfig_1a5aacf3ba605a2c6bfa6a88b971557fa2">camResH</link>.load();
00009 &#32;&#32;&#32;&#32;cv::Rect&#32;temp((W/2)-radius,(H/2)-radius,radius*2,radius*2);
00010 &#32;&#32;&#32;&#32;centerBox=temp;
00011 &#32;&#32;&#32;&#32;boundingBox=temp;&#32;
00012 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classVideoTracker_1af83065f606e3a076307a156c27f71b11"/><section>
    <title>initializeTracker()</title>
<indexterm><primary>initializeTracker</primary><secondary>VideoTracker</secondary></indexterm>
<indexterm><primary>VideoTracker</primary><secondary>initializeTracker</secondary></indexterm>
<para><computeroutput>void VideoTracker::initializeTracker (const cv::Mat &amp; frame)</computeroutput></para><para>

<para>Function to initialize the tracker with a given image. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>const</entry><entry>
<para>cv::Mat&amp; - Image containing the object to be tracked. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_videotracker_8cpp_source_1l00015">15</link> of file <link linkend="_videotracker_8cpp_source">videotracker.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00016 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cfg.<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a429208ba4ff9c592ec985055adeef13e">trackingAlg</link>&#32;==&#32;<emphasis role="stringliteral">&quot;CSRT&quot;</emphasis>)&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tracker&#32;=&#32;cv::TrackerCSRT::create();
00018 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cfg.<link linkend="_classConfig_1a91839b9ae92f5503ed43baa71da88fdc">iavconf</link>.<link linkend="_structIAVConfig_1a429208ba4ff9c592ec985055adeef13e">trackingAlg</link>&#32;==&#32;<emphasis role="stringliteral">&quot;KCF&quot;</emphasis>)&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tracker&#32;=&#32;cv::TrackerKCF::create();
00020 &#32;&#32;&#32;&#32;}
00021 &#32;&#32;&#32;&#32;boundingBox&#32;=&#32;centerBox;
00022 &#32;&#32;&#32;&#32;tracker-&gt;init(frame,&#32;boundingBox);
00023 }
</programlisting></section>
<anchor xml:id="_classVideoTracker_1a548651167191b0d3f5e69d252e3f30da"/><section>
    <title>trackObject()</title>
<indexterm><primary>trackObject</primary><secondary>VideoTracker</secondary></indexterm>
<indexterm><primary>VideoTracker</primary><secondary>trackObject</secondary></indexterm>
<para><computeroutput>bool VideoTracker::trackObject (const cv::Mat &amp; frame, <link linkend="_structRegionOfInterest">RegionOfInterest</link> &amp; trackingSig)</computeroutput></para><para>

<para>Function to track the object in the given image. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>const</entry><entry>
<para>cv::Mat&amp; - Image containing the object to be tracked. </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>RegionOfInterest&amp;</entry><entry>
<para>- Region of interest where the object should be tracked. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool - True if the object is successfully tracked, false otherwise. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_videotracker_8cpp_source_1l00025">25</link> of file <link linkend="_videotracker_8cpp_source">videotracker.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;trackingUpdated&#32;=&#32;tracker-&gt;update(frame,&#32;boundingBox);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trackingUpdated){
00029 
00030 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@&#32;comment&#32;:&#32;this&#32;gives&#32;the&#32;center&#32;x,y&#32;and&#32;the&#32;w&#32;and&#32;h</emphasis>
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSig.<link linkend="_structRegionOfInterest_1a7c05ee763a1dbcea5d7722c8611e6bc7">centerX</link>.store(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(boundingBox.x&#32;+&#32;boundingBox.width/2));
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSig.<link linkend="_structRegionOfInterest_1a9a5c08c619eb5383833aabae962490df">centerY</link>.store(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(boundingBox.y&#32;+&#32;boundingBox.height/2));
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSig.<link linkend="_structRegionOfInterest_1a0272d3fbebc59f034dd2de9e89d50598">volumeW</link>.store(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(boundingBox.width));
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSig.<link linkend="_structRegionOfInterest_1a33377fff7783a831c2b373c2194e7afb">volumeH</link>.store(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(boundingBox.height));
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@&#32;comment&#32;:&#32;this&#32;gives&#32;the&#32;TOPLEFT&#32;corner&#32;x,y&#32;and&#32;the&#32;w&#32;and&#32;h</emphasis>
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;trackingSig.centerX.store(static_cast&lt;int&gt;(boundingBox.x));</emphasis>
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;trackingSig.centerY.store(static_cast&lt;int&gt;(boundingBox.y));</emphasis>
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;trackingSig.volumeW.store(static_cast&lt;int&gt;(boundingBox.width));</emphasis>
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;trackingSig.volumeH.store(static_cast&lt;int&gt;(boundingBox.height));</emphasis>
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;trackingUpdated;
00043 
00044 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
include/<link linkend="_videotracker_8h">videotracker.h</link>src/<link linkend="_videotracker_8cpp">videotracker.cpp</link></section>
</section>
