<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_audioserver_8h_source" xml:lang="en-US">
<title>audioserver.h</title>
<indexterm><primary>include/audioserver.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_audioserver_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;AUDIOSERVER_H</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;AUDIOSERVER_H</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;mutex&gt;</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;condition_variable&gt;</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;jack/jack.h&gt;</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;jack/control.h&gt;</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00007"/>00007 
<anchor xml:id="_audioserver_8h_source_1l00008"/>00008 <emphasis role="comment">//&#32;#define&#32;SERVER_VERBOSE</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00009"/>00009 
<anchor xml:id="_audioserver_8h_source_1l00010"/>00010 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structAudioConfig">AudioConfig</link>;
<anchor xml:id="_audioserver_8h_source_1l00011"/>00011 
<anchor xml:id="_audioserver_8h_source_1l00012"/><link linkend="_audioserver_8h_1acec480b06d69cadd02c28e6ebb9e2412">00012</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_audioserver_8h_1acec480b06d69cadd02c28e6ebb9e2412">supported_driver</link>[5]&#32;=&#32;<emphasis role="stringliteral">&quot;alsa&quot;</emphasis>;
<anchor xml:id="_audioserver_8h_source_1l00013"/>00013 
<anchor xml:id="_audioserver_8h_source_1l00022"/><link linkend="_classAudioServer">00022</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classAudioServer">AudioServer</link>{
<anchor xml:id="_audioserver_8h_source_1l00023"/>00023 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_audioserver_8h_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_classAudioServer_1a805734cde851bf85b3bcb9bc8a76fb9e">AudioServer</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;driverName&#32;=&#32;<link linkend="_audioserver_8h_1acec480b06d69cadd02c28e6ebb9e2412">supported_driver</link>);
<anchor xml:id="_audioserver_8h_source_1l00027"/>00027 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<link linkend="_classAudioServer_1ae0e8c5f59aac9a1f4311b262e868cc5a">~AudioServer</link>();
<anchor xml:id="_audioserver_8h_source_1l00032"/>00032 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioServer_1a19903646817c7d1f3dc2bec8d1f2811e">setup_server</link>();
<anchor xml:id="_audioserver_8h_source_1l00037"/>00037 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioServer_1ad727e135d3776ff9a631e47873a6e239">start_server</link>(std::mutex&amp;,&#32;std::condition_variable&amp;,&#32;<emphasis role="keywordtype">bool</emphasis>&amp;);
<anchor xml:id="_audioserver_8h_source_1l00045"/>00045 
<anchor xml:id="_audioserver_8h_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classAudioServer_1a536a796af0497242444f845df99aba34">stop_server</link>();
<anchor xml:id="_audioserver_8h_source_1l00050"/>00050 
<anchor xml:id="_audioserver_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rule&#32;of&#32;five&#32;(5)</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00055"/><link linkend="_classAudioServer_1a812b89afeb671dae2fda7674aa858761">00055</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<link linkend="_classAudioServer_1a812b89afeb671dae2fda7674aa858761">AudioServer</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classAudioServer">AudioServer</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audioserver_8h_source_1l00056"/>00056 
<anchor xml:id="_audioserver_8h_source_1l00060"/><link linkend="_classAudioServer_1a445545e5e10004d65ec649aafe53bf5f">00060</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioServer_1a445545e5e10004d65ec649aafe53bf5f">AudioServer</link>&#32;(<link linkend="_classAudioServer">AudioServer</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audioserver_8h_source_1l00061"/>00061 
<anchor xml:id="_audioserver_8h_source_1l00065"/><link linkend="_classAudioServer_1a506d1caeb1dcdd2a93565d6ea1b8d213">00065</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioServer">AudioServer</link>&amp;&#32;<link linkend="_classAudioServer_1a506d1caeb1dcdd2a93565d6ea1b8d213">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classAudioServer">AudioServer</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audioserver_8h_source_1l00066"/>00066 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00070"/><link linkend="_classAudioServer_1a8bdf6e1d1391cfe12f19dab76ade9eb6">00070</link> &#32;&#32;&#32;&#32;<link linkend="_classAudioServer">AudioServer</link>&amp;&#32;<link linkend="_classAudioServer_1a8bdf6e1d1391cfe12f19dab76ade9eb6">operator=</link>(<link linkend="_classAudioServer">AudioServer</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_audioserver_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00072"/>00072 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_audioserver_8h_source_1l00073"/>00073 &#32;&#32;&#32;&#32;jackctl_server_t&#32;*server;
<anchor xml:id="_audioserver_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;JSList&#32;*parameters;
<anchor xml:id="_audioserver_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;JSList&#32;*drivers;
<anchor xml:id="_audioserver_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;jackctl_sigmask_t&#32;*sigmask;
<anchor xml:id="_audioserver_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*driver_name;
<anchor xml:id="_audioserver_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structAudioConfig">AudioConfig</link>&amp;&#32;audiocfg;
<anchor xml:id="_audioserver_8h_source_1l00079"/>00079 
<anchor xml:id="_audioserver_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;change_server_parameters();
<anchor xml:id="_audioserver_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;change_ALSAdriver_parameters();
<anchor xml:id="_audioserver_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;jackctl_driver_t*&#32;jackctl_server_get_driver();
<anchor xml:id="_audioserver_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;jackctl_parameter_t*&#32;jackctl_get_parameter(<emphasis role="keyword">const</emphasis>&#32;JSList*,<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*);
<anchor xml:id="_audioserver_8h_source_1l00099"/>00099 
<anchor xml:id="_audioserver_8h_source_1l00100"/>00100 <emphasis role="preprocessor">#ifdef&#32;SERVER_VERBOSE</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;print_parameters(<emphasis role="keyword">const</emphasis>&#32;JSList*);
<anchor xml:id="_audioserver_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;print_value(<emphasis role="keyword">union</emphasis>&#32;jackctl_parameter_value,&#32;jackctl_param_type_t);
<anchor xml:id="_audioserver_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;
<anchor xml:id="_audioserver_8h_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;print_driver_info();
<anchor xml:id="_audioserver_8h_source_1l00119"/>00119 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_audioserver_8h_source_1l00120"/>00120 
<anchor xml:id="_audioserver_8h_source_1l00121"/>00121 };
<anchor xml:id="_audioserver_8h_source_1l00122"/>00122 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
