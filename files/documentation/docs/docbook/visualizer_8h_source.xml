<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_visualizer_8h_source" xml:lang="en-US">
<title>visualizer.h</title>
<indexterm><primary>include/visualizer.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_visualizer_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;VISUALIZER_H</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;VISUALIZER_H</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00003"/>00003 
<anchor xml:id="_visualizer_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_camera_8h">camera.h</link>&quot;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_videotracker_8h">videotracker.h</link>&quot;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_trigger_8h">trigger.h</link>&quot;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_waveform_8h">waveform.h</link>&quot;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_spectrogram_8h">spectrogram.h</link>&quot;</emphasis>
<anchor xml:id="_visualizer_8h_source_1l00011"/>00011 <emphasis role="keyword">class&#32;</emphasis><link linkend="_structRegionOfInterest">RegionOfInterest</link>;
<anchor xml:id="_visualizer_8h_source_1l00012"/>00012 <emphasis role="keyword">class&#32;</emphasis><link linkend="_structTone">Tone</link>;
<anchor xml:id="_visualizer_8h_source_1l00013"/>00013 
<anchor xml:id="_visualizer_8h_source_1l00017"/><link linkend="_classVisualizer">00017</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classVisualizer">Visualizer</link>{
<anchor xml:id="_visualizer_8h_source_1l00018"/>00018 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_visualizer_8h_source_1l00019"/>00019 &#32;&#32;&#32;&#32;
<anchor xml:id="_visualizer_8h_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<link linkend="_classVisualizer_1a104487003c9fea602e26c072aae27efc">Visualizer</link>();
<anchor xml:id="_visualizer_8h_source_1l00022"/>00022 
<anchor xml:id="_visualizer_8h_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_classVisualizer_1a013ec3101407fbe4805f289bc32d1265">~Visualizer</link>();
<anchor xml:id="_visualizer_8h_source_1l00025"/>00025 
<anchor xml:id="_visualizer_8h_source_1l00029"/><link linkend="_classVisualizer_1a74e89c75b05f50baeb692fd62437e4e4">00029</link> &#32;&#32;&#32;&#32;<link linkend="_classVisualizer_1a74e89c75b05f50baeb692fd62437e4e4">Visualizer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classVisualizer">Visualizer</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_visualizer_8h_source_1l00030"/>00030 
<anchor xml:id="_visualizer_8h_source_1l00034"/><link linkend="_classVisualizer_1a28d372074c4cacdc426cdcfe56973b1b">00034</link> &#32;&#32;&#32;&#32;<link linkend="_classVisualizer_1a28d372074c4cacdc426cdcfe56973b1b">Visualizer</link>(<link linkend="_classVisualizer">Visualizer</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_visualizer_8h_source_1l00035"/>00035 
<anchor xml:id="_visualizer_8h_source_1l00039"/><link linkend="_classVisualizer_1a82746f3d798c920bf97fe5fcc97588bf">00039</link> &#32;&#32;&#32;&#32;<link linkend="_classVisualizer">Visualizer</link>&amp;&#32;<link linkend="_classVisualizer_1a82746f3d798c920bf97fe5fcc97588bf">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classVisualizer">Visualizer</link>&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_visualizer_8h_source_1l00040"/>00040 
<anchor xml:id="_visualizer_8h_source_1l00044"/><link linkend="_classVisualizer_1ac4737c1975ddb0072fab8ffbe942ee9f">00044</link> &#32;&#32;&#32;&#32;<link linkend="_classVisualizer">Visualizer</link>&amp;&#32;<link linkend="_classVisualizer_1ac4737c1975ddb0072fab8ffbe942ee9f">operator=</link>(<link linkend="_classVisualizer">Visualizer</link>&amp;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_visualizer_8h_source_1l00045"/>00045 
<anchor xml:id="_visualizer_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classVisualizer_1a968f280b3f09b86105bc662021babbe9">broadcast</link>();
<anchor xml:id="_visualizer_8h_source_1l00052"/>00052 
<anchor xml:id="_visualizer_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classVisualizer_1a2c7e8bfe6cc35f01084ae3aeaae768db">setAudiolizerUpdater</link>(std::function&lt;<emphasis role="keywordtype">void</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structRegionOfInterest">RegionOfInterest</link>&amp;,&#32;<link linkend="_structTone">Tone</link>&amp;)&gt;);
<anchor xml:id="_visualizer_8h_source_1l00063"/>00063 
<anchor xml:id="_visualizer_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classVisualizer_1a1e2c66042ba2df8011fe934abad95f7b">updateAudioSignal</link>(<emphasis role="keywordtype">float</emphasis>);
<anchor xml:id="_visualizer_8h_source_1l00070"/>00070 
<anchor xml:id="_visualizer_8h_source_1l00071"/>00071 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_visualizer_8h_source_1l00072"/>00072 
<anchor xml:id="_visualizer_8h_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classConfig">Config</link>&#32;&amp;cfg&#32;=&#32;<link linkend="_classConfig_1a2d423929da9ed51425ac0cf219b36f5e">Config::getInstance</link>();
<anchor xml:id="_visualizer_8h_source_1l00074"/>00074 
<anchor xml:id="_visualizer_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<link linkend="_classCamera">Camera</link>&#32;camera;
<anchor xml:id="_visualizer_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="_classVideoTracker">VideoTracker</link>&#32;videoTracker;
<anchor xml:id="_visualizer_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<link linkend="_classTrigger">Trigger</link>&#32;trigger;
<anchor xml:id="_visualizer_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<link linkend="_classWaveform">Waveform</link>&#32;waveform;
<anchor xml:id="_visualizer_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<link linkend="_classSpectrogram">Spectrogram</link>&#32;spectrogram;
<anchor xml:id="_visualizer_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;std::vector&lt;float&gt;&#32;specMagnitude;
<anchor xml:id="_visualizer_8h_source_1l00081"/>00081 
<anchor xml:id="_visualizer_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;cv::Mat&#32;visualFrame,cameraFrame;
<anchor xml:id="_visualizer_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;cv::Mat&#32;camBinaryMask;
<anchor xml:id="_visualizer_8h_source_1l00084"/>00084 
<anchor xml:id="_visualizer_8h_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;transpose_ratio_x,&#32;transpose_ratio_y;
<anchor xml:id="_visualizer_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;R,G,B;
<anchor xml:id="_visualizer_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;LR,TB;
<anchor xml:id="_visualizer_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numPointsPerimeter;
<anchor xml:id="_visualizer_8h_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leftMidFreq,&#32;rightMidFreq;
<anchor xml:id="_visualizer_8h_source_1l00090"/>00090 
<anchor xml:id="_visualizer_8h_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_setToCamera(<emphasis role="keywordtype">float</emphasis>);
<anchor xml:id="_visualizer_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_show_timer(<emphasis role="keywordtype">float</emphasis>);
<anchor xml:id="_visualizer_8h_source_1l00093"/>00093 
<anchor xml:id="_visualizer_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;trackingToggle;
<anchor xml:id="_visualizer_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;updateTrackingMode(<emphasis role="keywordtype">bool</emphasis>);
<anchor xml:id="_visualizer_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;std::function&lt;void(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structRegionOfInterest">RegionOfInterest</link>&amp;,&#32;<link linkend="_structTone">Tone</link>&amp;)&gt;&#32;updateAudioLizer&#32;;
<anchor xml:id="_visualizer_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;
<anchor xml:id="_visualizer_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_set_BG_manually(<link linkend="_structTone">Tone</link>&amp;);
<anchor xml:id="_visualizer_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_set_FG_manually(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structRegionOfInterest">RegionOfInterest</link>&amp;);
<anchor xml:id="_visualizer_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_create_camMask();&#32;&#32;&#32;&#32;
<anchor xml:id="_visualizer_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_showFrame();
<anchor xml:id="_visualizer_8h_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;_set_freq_midBoundaries();
<anchor xml:id="_visualizer_8h_source_1l00103"/>00103 
<anchor xml:id="_visualizer_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;draWaveform();
<anchor xml:id="_visualizer_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawSpectrogram();
<anchor xml:id="_visualizer_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawSmallcircle(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structRegionOfInterest">RegionOfInterest</link>&#32;&amp;);
<anchor xml:id="_visualizer_8h_source_1l00107"/>00107 };
<anchor xml:id="_visualizer_8h_source_1l00108"/>00108 
<anchor xml:id="_visualizer_8h_source_1l00109"/>00109 
<anchor xml:id="_visualizer_8h_source_1l00110"/>00110 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
