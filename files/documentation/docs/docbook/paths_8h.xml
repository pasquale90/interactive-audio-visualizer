<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_paths_8h" xml:lang="en-US">
<title>include/paths.h File Reference</title>
<indexterm><primary>include/paths.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;string&gt;
#include &lt;filesystem&gt;
</programlisting>Include dependency graph for paths.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="paths_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="paths_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacePaths">Paths</link></para>

<para>Namespace containing the path to settings.db file. </para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacePathsTest">PathsTest</link></para>

<para>Namespace containing the path to the test.db file, used for testing purposes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>auto <link linkend="_paths_8h_1ae088841b314dc5d872b1d357d250823c">getAbsPath</link> (const std::string &amp;relativePath) -&gt; std::string</para>

<para>Function to get the absolute path of a given relative path. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const std::string <link linkend="_namespacePaths_1a9a34ad13812f905ddf7ef5d2e7b8df1b">Paths::databasePath</link> {<link linkend="_paths_8h_1ae088841b314dc5d872b1d357d250823c">getAbsPath</link>(&quot;../data/settings.db&quot;)}</para>
</listitem>
            <listitem><para>const std::string <link linkend="_namespacePathsTest_1ad04cef1a1cbe80419b8ce66fb4665ab6">PathsTest::databasePath</link> {<link linkend="_paths_8h_1ae088841b314dc5d872b1d357d250823c">getAbsPath</link>(&quot;../data/test.db&quot;)}</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_paths_8h_1ae088841b314dc5d872b1d357d250823c"/><section>
    <title>getAbsPath()</title>
<indexterm><primary>getAbsPath</primary><secondary>paths.h</secondary></indexterm>
<indexterm><primary>paths.h</primary><secondary>getAbsPath</secondary></indexterm>
<para><computeroutput>auto getAbsPath (const std::string &amp; relativePath) -&gt; std::string <computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Function to get the absolute path of a given relative path. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>relativePath</entry><entry>
<para>- The path relative to the project&apos;s root directory. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>std::string - The absolute path of the given relative path. </para>
</formalpara>
<note><title>Note</title>

<para>This function uses C++17&apos;s std::filesystem library. </para>
</note>
<formalpara><title>See also</title>

<para><link xlink:href="https://en.cppreference.com/w/cpp/filesystem/path">https://en.cppreference.com/w/cpp/filesystem/path</link> </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_paths_8h_source_1l00014">14</link> of file <link linkend="_paths_8h_source">paths.h</link>.</para>
<programlisting linenumbering="unnumbered">00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00015 &#32;&#32;&#32;&#32;std::filesystem::path&#32;rootDir&#32;=&#32;std::filesystem::absolute(__FILE__).parent_path();
00016 &#32;&#32;&#32;&#32;std::filesystem::path&#32;targetPath&#32;=&#32;rootDir&#32;/&#32;relativePath;
00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;targetPath.lexically_normal().string();
00018 }
</programlisting></section>
</section>
</section>
