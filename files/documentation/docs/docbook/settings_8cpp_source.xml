<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_settings_8cpp_source" xml:lang="en-US">
<title>settings.cpp</title>
<indexterm><primary>src/settings.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_settings_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;sqlite3.h&quot;</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_settings_8h">settings.h</link>&quot;</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_config_8h">config.h</link>&quot;</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00004"/>00004 
<anchor xml:id="_settings_8cpp_source_1l00005"/><link linkend="_classSettingsDB_1a747cc6447e717ecfecd306b60a98169f">00005</link> <link linkend="_classSettingsDB_1a747cc6447e717ecfecd306b60a98169f">SettingsDB::SettingsDB</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;db_path)&#32;:&#32;dbPath(db_path)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;
<anchor xml:id="_settings_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_open(dbPath.c_str(),&#32;&amp;db)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;db&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;
<anchor xml:id="_settings_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;table&#32;if&#32;it&#32;doesn&apos;t&#32;exist</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;createTableSQL&#32;=&#32;
<anchor xml:id="_settings_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;CREATE&#32;TABLE&#32;IF&#32;NOT&#32;EXISTS&#32;settings&#32;(&quot;</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;setting_name&#32;TEXT&#32;PRIMARY&#32;KEY,&quot;</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;setting_value&#32;TEXT&#32;NOT&#32;NULL);&quot;</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00017"/>00017 
<anchor xml:id="_settings_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;errMsg&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;createTableSQL,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
<anchor xml:id="_settings_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(db);
<anchor xml:id="_settings_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;db&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00024"/>00024 }
<anchor xml:id="_settings_8cpp_source_1l00025"/>00025 
<anchor xml:id="_settings_8cpp_source_1l00026"/><link linkend="_classSettingsDB_1a32c5d5d956d09f1c1ba56f69ca738fe1">00026</link> <link linkend="_classSettingsDB_1a32c5d5d956d09f1c1ba56f69ca738fe1">SettingsDB::~SettingsDB</link>(){
<anchor xml:id="_settings_8cpp_source_1l00027"/>00027 
<anchor xml:id="_settings_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(db)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_close(db);
<anchor xml:id="_settings_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;
<anchor xml:id="_settings_8cpp_source_1l00032"/>00032 }
<anchor xml:id="_settings_8cpp_source_1l00033"/>00033 
<anchor xml:id="_settings_8cpp_source_1l00034"/><link linkend="_classSettingsDB_1abae491addee6520ecf6c00622b776521">00034</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classSettingsDB_1abae491addee6520ecf6c00622b776521">SettingsDB::saveSettings</link>(<emphasis role="keyword">const</emphasis>&#32;std::unordered_map&lt;std::string,&#32;std::string&gt;&amp;&#32;settings)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!db)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00036"/>00036 
<anchor xml:id="_settings_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Begin&#32;transaction&#32;for&#32;better&#32;performance</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;errMsg&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;<emphasis role="stringliteral">&quot;BEGIN&#32;TRANSACTION&quot;</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
<anchor xml:id="_settings_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00043"/>00043 
<anchor xml:id="_settings_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First,&#32;clear&#32;existing&#32;settings</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;clearSQL&#32;=&#32;<emphasis role="stringliteral">&quot;DELETE&#32;FROM&#32;settings;&quot;</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;clearSQL,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
<anchor xml:id="_settings_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00050"/>00050 
<anchor xml:id="_settings_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;the&#32;insert&#32;statement</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;sqlite3_stmt*&#32;stmt;
<anchor xml:id="_settings_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;insertSQL&#32;=&#32;<emphasis role="stringliteral">&quot;INSERT&#32;INTO&#32;settings&#32;(setting_name,&#32;setting_value)&#32;VALUES&#32;(?,&#32;?);&quot;</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_prepare_v2(db,&#32;insertSQL,&#32;-1,&#32;&amp;stmt,&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00057"/>00057 
<anchor xml:id="_settings_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Insert&#32;all&#32;settings</emphasis>
<anchor xml:id="_settings_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;[key,&#32;value]&#32;:&#32;settings)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(stmt,&#32;1,&#32;key.c_str(),&#32;-1,&#32;SQLITE_STATIC);
<anchor xml:id="_settings_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_bind_text(stmt,&#32;2,&#32;value.c_str(),&#32;-1,&#32;SQLITE_STATIC);
<anchor xml:id="_settings_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_settings_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_step(stmt)&#32;!=&#32;SQLITE_DONE)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
<anchor xml:id="_settings_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_reset(stmt);
<anchor xml:id="_settings_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00069"/>00069 
<anchor xml:id="_settings_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
<anchor xml:id="_settings_8cpp_source_1l00071"/>00071 
<anchor xml:id="_settings_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_exec(db,&#32;<emphasis role="stringliteral">&quot;COMMIT&quot;</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;&amp;errMsg)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqlite3_free(errMsg);
<anchor xml:id="_settings_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00076"/>00076 
<anchor xml:id="_settings_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00078"/>00078 }
<anchor xml:id="_settings_8cpp_source_1l00079"/>00079 
<anchor xml:id="_settings_8cpp_source_1l00080"/><link linkend="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9">00080</link> std::unordered_map&lt;std::string,&#32;std::string&gt;&#32;<link linkend="_classSettingsDB_1ab394914d6d206f32eb68103c447d73d9">SettingsDB::loadSettings</link>()&#32;{
<anchor xml:id="_settings_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::string&gt;&#32;settings;
<anchor xml:id="_settings_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;
<anchor xml:id="_settings_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!db)&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
<anchor xml:id="_settings_8cpp_source_1l00084"/>00084 
<anchor xml:id="_settings_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;selectSQL&#32;=&#32;<emphasis role="stringliteral">&quot;SELECT&#32;setting_name,&#32;setting_value&#32;FROM&#32;settings;&quot;</emphasis>;
<anchor xml:id="_settings_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;sqlite3_stmt*&#32;stmt;
<anchor xml:id="_settings_8cpp_source_1l00087"/>00087 
<anchor xml:id="_settings_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sqlite3_prepare_v2(db,&#32;selectSQL,&#32;-1,&#32;&amp;stmt,&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;!=&#32;SQLITE_OK)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
<anchor xml:id="_settings_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00091"/>00091 
<anchor xml:id="_settings_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(sqlite3_step(stmt)&#32;==&#32;SQLITE_ROW)&#32;{
<anchor xml:id="_settings_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;name&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(sqlite3_column_text(stmt,&#32;0));
<anchor xml:id="_settings_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;value&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(sqlite3_column_text(stmt,&#32;1));
<anchor xml:id="_settings_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;settings[name]&#32;=&#32;value;
<anchor xml:id="_settings_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="_settings_8cpp_source_1l00097"/>00097 
<anchor xml:id="_settings_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;sqlite3_finalize(stmt);
<anchor xml:id="_settings_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;settings;
<anchor xml:id="_settings_8cpp_source_1l00100"/>00100 }
</programlisting></section>
